{
  "Resources": {
    "CloudFrontOriginAccessIdentitiesCloudfrontDestinationOriginAccessIdentityC5A4B16F": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Allows CloudFront to reach the bucket"
        }
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/CloudFrontOriginAccessIdentities/CloudfrontDestinationOriginAccessIdentity/Resource"
      }
    },
    "DynamoDbTablesVideoInfoDynamoDbTable58A9E9E1": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "guid",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "guid",
            "AttributeType": "S"
          },
          {
            "AttributeName": "srcBucket",
            "AttributeType": "S"
          },
          {
            "AttributeName": "startTime",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "srcBucket-startTime-index",
            "KeySchema": [
              {
                "AttributeName": "srcBucket",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "startTime",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "TableName": "dev-jingood2-vod-VideoInfo"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/DynamoDbTables/VideoInfoDynamoDbTable"
      }
    },
    "KmsKeysSnsKmsMasterKey326B8D82": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/KmsKeys/SnsKmsMasterKey/Resource"
      }
    },
    "KmsKeysSnsKmsMasterKeyAlias252485D7": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/dev-jingood2-vod-SnsMasterKey",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "KmsKeysSnsKmsMasterKey326B8D82",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/KmsKeys/SnsKmsMasterKey/Alias/Resource"
      }
    },
    "KmsKeysSqsKmsMasterKey2775173E": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/KmsKeys/SqsKmsMasterKey/Resource"
      }
    },
    "KmsKeysSqsKmsMasterKeyAlias75A0C66C": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/dev-jingood2-vod-SqsMasterKey",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "KmsKeysSqsKmsMasterKey2775173E",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/KmsKeys/SqsKmsMasterKey/Alias/Resource"
      }
    },
    "S3BucketsLogsBucket9F3A5E35": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": "dev-jingood2-vod-logs",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/S3Buckets/LogsBucket/Resource"
      }
    },
    "S3BucketsDestinationBucketD831CA48": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": "dev-jingood2-vod-destination",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET"
              ],
              "AllowedOrigins": [
                "*"
              ],
              "MaxAge": 3000
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "S3BucketsLogsBucket9F3A5E35"
          },
          "LogFilePrefix": "s3-access/"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/S3Buckets/DestinationBucket/Resource"
      }
    },
    "S3BucketsDestinationBucketPolicy13B47D21": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "S3BucketsDestinationBucketD831CA48"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "CloudFrontOriginAccessIdentitiesCloudfrontDestinationOriginAccessIdentityC5A4B16F",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::",
                    {
                      "Ref": "S3BucketsDestinationBucketD831CA48"
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/S3Buckets/DestinationBucket/Policy/Resource"
      }
    },
    "S3BucketsSourceBucket4A23DAD8": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": "dev-jingood2-vod-source",
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "dev-jingood2-vod-source-archive",
              "Status": "Enabled",
              "TagFilters": [
                {
                  "Key": "key",
                  "Value": "dev-jingood2-vod"
                },
                {
                  "Key": "value",
                  "Value": "GLACIER"
                }
              ],
              "Transitions": [
                {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 1
                }
              ]
            },
            {
              "Id": "dev-jingood2-vod-source-deep-archive",
              "Status": "Enabled",
              "TagFilters": [
                {
                  "Key": "key",
                  "Value": "dev-jingood2-vod"
                },
                {
                  "Key": "value",
                  "Value": "DEEP_ARCHIVE"
                }
              ],
              "Transitions": [
                {
                  "StorageClass": "DEEP_ARCHIVE",
                  "TransitionInDays": 1
                }
              ]
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "S3BucketsLogsBucket9F3A5E35"
          },
          "LogFilePrefix": "s3-access/"
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred"
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/S3Buckets/SourceBucket/Resource"
      }
    },
    "SnsTopicsNotificationsDE98E041": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "dev-jingood2-vod-Notifications"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/SnsTopics/Notifications/Resource"
      }
    },
    "SnsTopicsNotificationsjingood2gmailcomD79D7C2F": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "email",
        "TopicArn": {
          "Ref": "SnsTopicsNotificationsDE98E041"
        },
        "Endpoint": "jingood2@gmail.com"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/SnsTopics/Notifications/jingood2@gmail.com/Resource"
      }
    },
    "SqsQueuesSqsDeadLetterQueueB220E2ED": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "dev-jingood2-vod-SqsDeadLetterQueue",
        "VisibilityTimeout": 120
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/SqsQueues/SqsDeadLetterQueue/Resource"
      }
    },
    "SqsQueuesMainSqsQueue3DF56461": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "dev-jingood2-vod-MainSqsQueue",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "SqsQueuesSqsDeadLetterQueueB220E2ED",
              "Arn"
            ]
          },
          "maxReceiveCount": 1
        },
        "VisibilityTimeout": 120
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/SqsQueues/MainSqsQueue/Resource"
      }
    },
    "CloudFrontsCloudFrontDistributionCachePolicyF0FE97E0": {
      "Type": "AWS::CloudFront::CachePolicy",
      "Properties": {
        "CachePolicyConfig": {
          "DefaultTTL": 86400,
          "MaxTTL": 31536000,
          "MinTTL": 0,
          "Name": {
            "Fn::Join": [
              "",
              [
                "jingood2vodCloudFrontsCloudFrontDistributionCachePolicy99F56D3C-",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "ParametersInCacheKeyAndForwardedToOrigin": {
            "CookiesConfig": {
              "CookieBehavior": "none"
            },
            "EnableAcceptEncodingBrotli": false,
            "EnableAcceptEncodingGzip": false,
            "HeadersConfig": {
              "HeaderBehavior": "whitelist",
              "Headers": [
                "Origin",
                "Access-Control-Request-Method",
                "Access-Control-Request-Headers"
              ]
            },
            "QueryStringsConfig": {
              "QueryStringBehavior": "none"
            }
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/CloudFronts/CloudFrontDistributionCachePolicy/Resource"
      }
    },
    "CloudFrontsCloudFrontDistribution221CB5B5": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD"
            ],
            "CachePolicyId": {
              "Ref": "CloudFrontsCloudFrontDistributionCachePolicyF0FE97E0"
            },
            "Compress": true,
            "TargetOriginId": "jingood2vodCloudFrontsCloudFrontDistributionOrigin160EABC1B",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": {
            "Bucket": {
              "Fn::GetAtt": [
                "S3BucketsLogsBucket9F3A5E35",
                "RegionalDomainName"
              ]
            },
            "Prefix": "cloudfront/"
          },
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "S3BucketsDestinationBucketD831CA48",
                  "RegionalDomainName"
                ]
              },
              "Id": "jingood2vodCloudFrontsCloudFrontDistributionOrigin160EABC1B",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "CloudFrontOriginAccessIdentitiesCloudfrontDestinationOriginAccessIdentityC5A4B16F"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "PriceClass": "PriceClass_100"
        }
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/CloudFronts/CloudFrontDistribution/Resource"
      }
    },
    "IamRolesArchiveSourceRoleE62C021F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "s3:PutObjectTagging",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "S3BucketsSourceBucket4A23DAD8",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-ArchiveSourceRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-ArchiveSourceRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/ArchiveSourceRole/Resource"
      }
    },
    "IamRolesCustomResourceRole7D5864F5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "cloudfront:GetDistributionConfig",
                    "cloudfront:UpdateDistribution"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":cloudfront::",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":distribution/",
                        {
                          "Ref": "CloudFrontsCloudFrontDistribution221CB5B5"
                        }
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "mediaconvert:CreatePreset",
                    "mediaconvert:CreateJobTemplate",
                    "mediaconvert:DeletePreset",
                    "mediaconvert:DeleteJobTemplate",
                    "mediaconvert:DescribeEndpoints",
                    "mediaconvert:ListJobTemplates"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":mediaconvert:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "mediapackage-vod:CreatePackagingConfiguration",
                    "mediapackage-vod:CreatePackagingGroup",
                    "mediapackage-vod:ListAssets",
                    "mediapackage-vod:ListPackagingConfigurations",
                    "mediapackage-vod:ListPackagingGroups"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "mediapackage-vod:DeleteAsset",
                    "mediapackage-vod:DeletePackagingConfiguration"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":mediapackage-vod:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":assets/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":mediapackage-vod:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":packaging-configurations/packaging-config-*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Action": [
                    "mediapackage-vod:DescribePackagingGroup",
                    "mediapackage-vod:DeletePackagingGroup"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":mediapackage-vod:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":packaging-groups/dev-jingood2-vod-packaging-group"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "s3:PutBucketNotification",
                    "s3:PutObject",
                    "s3:PutObjectAcl"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "S3BucketsSourceBucket4A23DAD8",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-CustomResourceRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-CustomResourceRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/CustomResourceRole/Resource"
      }
    },
    "IamRolesDynamoUpdateRole5280FBC7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "dynamoDb:UpdateItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/dev-jingood2-vod-VideoInfo"
                      ]
                    ]
                  }
                },
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-DynamoDbUpdateRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-DynamoUpdateRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/DynamoUpdateRole/Resource"
      }
    },
    "IamRolesEncodeRole27839FDD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "IamRolesMediaConvertRoleDBD25335",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "mediaconvert:CreateJob",
                    "mediaconvert:GetJobTemplate"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":mediaconvert:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "S3BucketsSourceBucket4A23DAD8",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "S3BucketsDestinationBucketD831CA48",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-EncodeRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-EncodeRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/EncodeRole/Resource"
      }
    },
    "IamRolesErrorHandlerRole4EC25F0C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "dynamodb:UpdateItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/dev-jingood2-vod-VideoInfo"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "sns:Publish",
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "SnsTopicsNotificationsDE98E041"
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-ErrorHandlerRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-ErrorHandlerRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/ErrorHandlerRole/Resource"
      }
    },
    "IamRolesErrorHandlerRoleDefaultPolicy63EE2D6E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:UpdateItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":dynamodb:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":table/dev-jingood2-vod-VideoInfo"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "IamRolesErrorHandlerRoleDefaultPolicy63EE2D6E",
        "Roles": [
          {
            "Ref": "IamRolesErrorHandlerRole4EC25F0C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/ErrorHandlerRole/DefaultPolicy/Resource"
      }
    },
    "IamRolesInputValidateRoleE2145049": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "S3BucketsSourceBucket4A23DAD8",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-InputValidateRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-InputValidateRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/InputValidateRole/Resource"
      }
    },
    "IamRolesMediaConvertRoleDBD25335": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "mediaconvert.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "execute-api:Invoke",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":execute-api:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "S3BucketsSourceBucket4A23DAD8",
                              "Arn"
                            ]
                          },
                          "/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "S3BucketsDestinationBucketD831CA48",
                              "Arn"
                            ]
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-MediaConvertRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-MediaConvertRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/MediaConvertRole/Resource"
      }
    },
    "IamRolesMediaInfoRole0F5707D7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "S3BucketsSourceBucket4A23DAD8",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-MediaInfoRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-MediaInfoRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/MediaInfoRole/Resource"
      }
    },
    "IamRolesMediaPackageAssetsRoleF5840CEC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "IamRolesMediaPackageVodRole2F296B82",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*s"
                      ]
                    ]
                  }
                },
                {
                  "Action": "mediapackage-vod:CreateAsset",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-MediaPackageAssetsRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-MediaPackageAssetsRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/MediaPackageAssetsRole/Resource"
      }
    },
    "IamRolesMediaPackageVodRole2F296B82": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "mediapackage.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "s3:GetObject",
                    "s3:GetBucketLocation",
                    "s3:GetBucketRequestPayment"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "S3BucketsDestinationBucketD831CA48",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "S3BucketsDestinationBucketD831CA48",
                              "Arn"
                            ]
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-MediaPackageVodRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-MediaPackageVodRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/MediaPackageVodRole/Resource"
      }
    },
    "IamRolesOutputValidateRole4E438CA5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "dynamodb:GetItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/dev-jingood2-vod-VideoInfo"
                      ]
                    ]
                  }
                },
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "s3:ListBucket",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "S3BucketsDestinationBucketD831CA48",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-OutputValidateRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-OutputValidateRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/OutputValidateRole/Resource"
      }
    },
    "IamRolesProfilerRoleFD0F0438": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "dynamodb:GetItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/dev-jingood2-vod-VideoInfo"
                      ]
                    ]
                  }
                },
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-ProfilerRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-ProfilerRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/ProfilerRole/Resource"
      }
    },
    "IamRolesSnsNotificationRoleF9DACA4C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "kms:GenerateDataKey",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "KmsKeysSnsKmsMasterKey326B8D82",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "log:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "sns:Publish",
                  "Condition": {
                    "Bool": {
                      "aws:SecureTransport": "true"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "SnsTopicsNotificationsDE98E041"
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-SnsNotificationRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-SnsNotificationRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/SnsNotificationRole/Resource"
      }
    },
    "IamRolesSqsSendMessageRole6951B35A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "kms:GenerateDataKey",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "KmsKeysSqsKmsMasterKey2775173E",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "log:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "sqs:SendMessage",
                  "Condition": {
                    "Bool": {
                      "aws:SecureTransport": "true"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "SqsQueuesMainSqsQueue3DF56461",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-SqsSendMessageRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-SqsSendMessageRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/SqsSendMessageRole/Resource"
      }
    },
    "IamRolesStepFunctionsRoleFD05369B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "states:StartExecution",
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":states:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":stateMachine:dev-jingood2-vod-IngestWorkflowStateMachine"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":states:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":stateMachine:dev-jingood2-vod-ProcessWorkflowStateMachine"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":states:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":stateMachine:dev-jingood2-vod-PublishWorkflowStateMachine"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-StepFunctionsRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-StepFunctionsRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/StepFunctionsRole/Resource"
      }
    },
    "IamRolesStepFunctionsServiceRoleCBE4EE63": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "states.",
                      {
                        "Ref": "AWS::Region"
                      },
                      ".amazonaws.com"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":function:*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dev-jingood2-vod-StepFunctionsServiceRolePolicyDocument"
          }
        ],
        "RoleName": "dev-jingood2-vod-StepFunctionsServiceRole"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/StepFunctionsServiceRole/Resource"
      }
    },
    "IamRolesStepFunctionsServiceRoleDefaultPolicyE5A6C739": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctionsInputValidateFunction159C59A4",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctionsMediaInfoFunctionE4E12675",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctionsDynamoDbUpdateFunction975864E9",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctionsStepFunctionsFunctionD2E87E65",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctionsSnsNotificationFunction2FFA56AD",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctionsProfilerFunction09767EC6",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctionsEncodeFunctionF8E9C07D",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctionsOutputValidateFunction38F12556",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctionsArchiveSourceFunctionC2D80DB5",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctionsMediaPackageAssetsFunctionBBCC2F3F",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctionsSqsSendMessageFunction2C27587E",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "IamRolesStepFunctionsServiceRoleDefaultPolicyE5A6C739",
        "Roles": [
          {
            "Ref": "IamRolesStepFunctionsServiceRoleCBE4EE63"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/IamRoles/StepFunctionsServiceRole/DefaultPolicy/Resource"
      }
    },
    "LambdaFunctionsLambdaLayerB84EA8CB": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "00fbe6642b5d01784c40d80d3b386fd84d6aa0bdcef0b42b37c8a08208af5403.zip"
        },
        "CompatibleRuntimes": [
          "nodejs12.x"
        ],
        "Description": "A layer to test LambdaLayers",
        "LicenseInfo": "Apache-2.0"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/LambdaLayer/Resource",
        "aws:asset:path": "asset.00fbe6642b5d01784c40d80d3b386fd84d6aa0bdcef0b42b37c8a08208af5403.zip",
        "aws:asset:property": "Content"
      }
    },
    "LambdaFunctionsErrorHandlerFunctionB60769DD": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "c6d6c76cbe151da0062ecebf457f8ef38edb2e04d3d81e96a0c632330bfaccbd.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRolesErrorHandlerRole4EC25F0C",
            "Arn"
          ]
        },
        "Description": "Captures and processes workflow errors",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DynamoDBTable": "dev-jingood2-vod-VideoInfo",
            "SnsTopic": {
              "Ref": "SnsTopicsNotificationsDE98E041"
            }
          }
        },
        "FunctionName": "dev-jingood2-vod-ErrorHandlerLambdaFunction",
        "Handler": "index.handler",
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "IamRolesErrorHandlerRoleDefaultPolicy63EE2D6E",
        "IamRolesErrorHandlerRole4EC25F0C"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/ErrorHandlerFunction/Resource",
        "aws:asset:path": "asset.c6d6c76cbe151da0062ecebf457f8ef38edb2e04d3d81e96a0c632330bfaccbd",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionsErrorHandlerFunctionErrorHandlerS3LambdaInvokeVideoPermission7AD8C46D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunctionsErrorHandlerFunctionB60769DD",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/ErrorHandlerFunction/ErrorHandlerS3LambdaInvokeVideoPermission"
      }
    },
    "LambdaFunctionsArchiveSourceFunctionC2D80DB5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "3a40031c12e655f644a942961a86cd0354f2adf326acf7a69d4b068724397e79.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRolesArchiveSourceRoleE62C021F",
            "Arn"
          ]
        },
        "Description": "Updates tags on source files to enable Glacier",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "ErrorHandler": {
              "Fn::GetAtt": [
                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                "Arn"
              ]
            }
          }
        },
        "FunctionName": "dev-jingood2-vod-ArchiveSourceLambdaFunction",
        "Handler": "index.handler",
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "IamRolesArchiveSourceRoleE62C021F"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/ArchiveSourceFunction/Resource",
        "aws:asset:path": "asset.3a40031c12e655f644a942961a86cd0354f2adf326acf7a69d4b068724397e79",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionsCustomResourceFunctionEF26B859": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "4965882527ed43a8a56a6140ad4c3b1a3304e43f0be0d04e703337aa53845b0d.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRolesCustomResourceRole7D5864F5",
            "Arn"
          ]
        },
        "Description": "Used to deploy resources not supported by CloudFormation",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "dev-jingood2-vod-CustomResourceLambdaFunction",
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
          }
        ],
        "Runtime": "nodejs12.x",
        "Timeout": 180
      },
      "DependsOn": [
        "IamRolesCustomResourceRole7D5864F5"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/CustomResourceFunction/Resource",
        "aws:asset:path": "asset.4965882527ed43a8a56a6140ad4c3b1a3304e43f0be0d04e703337aa53845b0d",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionsDynamoDbUpdateFunction975864E9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "968e9af0f80ea124ebed0a2a481bb76075ad009b586daa9d34b82118d759b7c8.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRolesDynamoUpdateRole5280FBC7",
            "Arn"
          ]
        },
        "Description": "Updates DynamoDB with event data",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DynamoDBTable": "dev-jingood2-vod-VideoInfo",
            "ErrorHandler": {
              "Fn::GetAtt": [
                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                "Arn"
              ]
            }
          }
        },
        "FunctionName": "dev-jingood2-vod-DynamoDbUpdateLambdaFunction",
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
          }
        ],
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "IamRolesDynamoUpdateRole5280FBC7"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/DynamoDbUpdateFunction/Resource",
        "aws:asset:path": "asset.968e9af0f80ea124ebed0a2a481bb76075ad009b586daa9d34b82118d759b7c8",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionsEncodeFunctionF8E9C07D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "5f9bc9d14a035378fec751a22d93371d4086d49df1c50f778ffd3e65282b98f0.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRolesEncodeRole27839FDD",
            "Arn"
          ]
        },
        "Description": "Creates a MediaConvert encode job",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "ErrorHandler": {
              "Fn::GetAtt": [
                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                "Arn"
              ]
            },
            "MediaConvertRole": {
              "Fn::GetAtt": [
                "IamRolesMediaConvertRoleDBD25335",
                "Arn"
              ]
            },
            "EndPoint": {
              "Fn::GetAtt": [
                "CustomResourcesMediaConvertEndPoint493A1B4F",
                "EndpointUrl"
              ]
            }
          }
        },
        "FunctionName": "dev-jingood2-vod-EncodeLambdaFunction",
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
          }
        ],
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "IamRolesEncodeRole27839FDD"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/EncodeFunction/Resource",
        "aws:asset:path": "asset.5f9bc9d14a035378fec751a22d93371d4086d49df1c50f778ffd3e65282b98f0",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionsInputValidateFunction159C59A4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "7e6bba41fc0e85760597571b06a1eaea839e842eaf4d774e8cdabf4f4d21554e.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRolesInputValidateRoleE2145049",
            "Arn"
          ]
        },
        "Description": "Validates the input given to the workflow",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "ErrorHandler": {
              "Fn::GetAtt": [
                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                "Arn"
              ]
            },
            "WorkflowName": "dev-jingood2-vod",
            "FrameCapture": "true",
            "ArchiveSource": "DISABLED",
            "EnableMediaPackage": "true",
            "InputRotate": "DEGREE_0",
            "EnableSns": "true",
            "EnableSqs": "true",
            "AcceleratedTranscoding": "PREFERRED",
            "Source": {
              "Ref": "S3BucketsSourceBucket4A23DAD8"
            },
            "Destination": {
              "Ref": "S3BucketsDestinationBucketD831CA48"
            },
            "CloudFront": {
              "Fn::GetAtt": [
                "CloudFrontsCloudFrontDistribution221CB5B5",
                "DomainName"
              ]
            },
            "MediaConvert_Template_2160p": "dev-jingood2-vod_Ott_2160p_Avc_Aac_16x9_qvbr_no_preset",
            "MediaConvert_Template_1080p": "dev-jingood2-vod_Ott_1080p_Avc_Aac_16x9_qvbr_no_preset",
            "MediaConvert_Template_720p": "dev-jingood2-vod_Ott_720p_Avc_Aac_16x9_qvbr_no_preset"
          }
        },
        "FunctionName": "dev-jingood2-vod-InputValidateLambdaFunction",
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
          }
        ],
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "IamRolesInputValidateRoleE2145049"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/InputValidateFunction/Resource",
        "aws:asset:path": "asset.7e6bba41fc0e85760597571b06a1eaea839e842eaf4d774e8cdabf4f4d21554e",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionsMediaInfoFunctionE4E12675": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "934423e0677a1e779035a084157154eac88a8bb31941f5e741ab488610a0af4b.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRolesMediaInfoRole0F5707D7",
            "Arn"
          ]
        },
        "Description": "Runs MediaInfo on a pre-signed S3 URL",
        "Environment": {
          "Variables": {
            "ErrorHandler": {
              "Fn::GetAtt": [
                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                "Arn"
              ]
            }
          }
        },
        "FunctionName": "dev-jingood2-vod-MediaInfoLambdaFunction",
        "Handler": "lambda_function.lambda_handler",
        "Runtime": "python3.7",
        "Timeout": 120
      },
      "DependsOn": [
        "IamRolesMediaInfoRole0F5707D7"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/MediaInfoFunction/Resource",
        "aws:asset:path": "asset.934423e0677a1e779035a084157154eac88a8bb31941f5e741ab488610a0af4b",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionsMediaPackageAssetsFunctionBBCC2F3F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "40f4718f543491c6d722dfd855a4097cfd06ff787725003d3a1c84acb72a09db.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRolesMediaPackageAssetsRoleF5840CEC",
            "Arn"
          ]
        },
        "Description": "Ingests an asset into MediaPackage-VOD",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "ErrorHandler": {
              "Fn::GetAtt": [
                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                "Arn"
              ]
            },
            "MediaPackageVodRole": {
              "Fn::GetAtt": [
                "IamRolesMediaPackageVodRole2F296B82",
                "Arn"
              ]
            },
            "GroupId": {
              "Fn::GetAtt": [
                "CustomResourcesMediaPackageVod7F090D8D",
                "GroupId"
              ]
            },
            "GroupDomainName": {
              "Fn::GetAtt": [
                "CustomResourcesMediaPackageVod7F090D8D",
                "GroupDomainName"
              ]
            }
          }
        },
        "FunctionName": "dev-jingood2-vod-MediaPackageAssetsLambdaFunction",
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
          }
        ],
        "Runtime": "nodejs12.x",
        "Timeout": 300
      },
      "DependsOn": [
        "IamRolesMediaPackageAssetsRoleF5840CEC"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/MediaPackageAssetsFunction/Resource",
        "aws:asset:path": "asset.40f4718f543491c6d722dfd855a4097cfd06ff787725003d3a1c84acb72a09db",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionsOutputValidateFunction38F12556": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "2a217864cba285b8b63d640a3f980db4cac689dcf45f22d0f01f80cfba3aef85.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRolesOutputValidateRole4E438CA5",
            "Arn"
          ]
        },
        "Description": "Parses MediaConvert job output",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DynamoDBTable": "dev-jingood2-vod-VideoInfo",
            "ErrorHandler": {
              "Fn::GetAtt": [
                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                "Arn"
              ]
            },
            "EndPoint": {
              "Fn::GetAtt": [
                "CustomResourcesMediaConvertEndPoint493A1B4F",
                "EndpointUrl"
              ]
            }
          }
        },
        "FunctionName": "dev-jingood2-vod-OutputValidateLambdaFunction",
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
          }
        ],
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "IamRolesOutputValidateRole4E438CA5"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/OutputValidateFunction/Resource",
        "aws:asset:path": "asset.2a217864cba285b8b63d640a3f980db4cac689dcf45f22d0f01f80cfba3aef85",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionsProfilerFunction09767EC6": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "dccb332518a9e27ce5e5beedac0cf2529fd65d9e27c56bf3affa604685b17305.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRolesProfilerRoleFD0F0438",
            "Arn"
          ]
        },
        "Description": "Sets an EncodeProfile based on mediainfo output",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DynamoDBTable": "dev-jingood2-vod-VideoInfo",
            "ErrorHandler": {
              "Fn::GetAtt": [
                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                "Arn"
              ]
            }
          }
        },
        "FunctionName": "dev-jingood2-vod-ProfilerLambdaFunction",
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
          }
        ],
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "IamRolesProfilerRoleFD0F0438"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/ProfilerFunction/Resource",
        "aws:asset:path": "asset.dccb332518a9e27ce5e5beedac0cf2529fd65d9e27c56bf3affa604685b17305",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionsSnsNotificationFunction2FFA56AD": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "7a2eaded2dea13e4bdfadc33215c9cc0f6f74f52c04bf9b345751917b5324204.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRolesSnsNotificationRoleF9DACA4C",
            "Arn"
          ]
        },
        "Description": "Sends a notification when the encode job is completed",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "ErrorHandler": {
              "Fn::GetAtt": [
                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                "Arn"
              ]
            },
            "SnsTopic": {
              "Ref": "SnsTopicsNotificationsDE98E041"
            }
          }
        },
        "FunctionName": "dev-jingood2-vod-SnsNotificationLambdaFunction",
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
          }
        ],
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "IamRolesSnsNotificationRoleF9DACA4C"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/SnsNotificationFunction/Resource",
        "aws:asset:path": "asset.7a2eaded2dea13e4bdfadc33215c9cc0f6f74f52c04bf9b345751917b5324204",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionsSqsSendMessageFunction2C27587E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "9784495746df7225d07afef0bee4df2d609336a959ee2f9c2821709475d00a08.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRolesSqsSendMessageRole6951B35A",
            "Arn"
          ]
        },
        "Description": "Publish the workflow results to an SQS queue",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "ErrorHandler": {
              "Fn::GetAtt": [
                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                "Arn"
              ]
            },
            "SqsQueue": {
              "Ref": "SqsQueuesMainSqsQueue3DF56461"
            }
          }
        },
        "FunctionName": "dev-jingood2-vod-SqsSendMessageLambdaFunction",
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
          }
        ],
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "IamRolesSqsSendMessageRole6951B35A"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/SqsSendMessageFunction/Resource",
        "aws:asset:path": "asset.9784495746df7225d07afef0bee4df2d609336a959ee2f9c2821709475d00a08",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionsStepFunctionsFunctionD2E87E65": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "a56595d6117035de0d67b693407ee03724c4ad1dc10de1a6c8098ece3b425c4c.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRolesStepFunctionsRoleFD05369B",
            "Arn"
          ]
        },
        "Description": "Creates a unique identifier (GUID) and executes the Ingest StateMachine",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "IngestWorkflow": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":states:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":stateMachine:dev-jingood2-vod-IngestWorkflowStateMachine"
                ]
              ]
            },
            "ProcessWorkflow": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":states:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":stateMachine:dev-jingood2-vod-ProcessWorkflowStateMachine"
                ]
              ]
            },
            "PublishWorkflow": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":states:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":stateMachine:dev-jingood2-vod-PublishWorkflowStateMachine"
                ]
              ]
            },
            "ErrorHandler": {
              "Fn::GetAtt": [
                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                "Arn"
              ]
            }
          }
        },
        "FunctionName": "dev-jingood2-vod-StepFunctionsLambdaFunction",
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
          }
        ],
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "IamRolesStepFunctionsRoleFD05369B"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/StepFunctionsFunction/Resource",
        "aws:asset:path": "asset.a56595d6117035de0d67b693407ee03724c4ad1dc10de1a6c8098ece3b425c4c",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionsStepFunctionsFunctionS3LambdaInvokeVideo39DD582C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunctionsStepFunctionsFunctionD2E87E65",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/StepFunctionsFunction/S3LambdaInvokeVideo"
      }
    },
    "LambdaFunctionsStepFunctionsFunctionCloudWatchLambdaInvokeComplete3EAA72E5": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunctionsStepFunctionsFunctionD2E87E65",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/LambdaFunctions/StepFunctionsFunction/CloudWatchLambdaInvokeComplete"
      }
    },
    "RulesEncodeCompleteRuleE90C2521": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "MediaConvert Completed event rule",
        "EventPattern": {
          "source": [
            "aws.mediaconvert"
          ],
          "detail": {
            "status": [
              "COMPLETE"
            ]
          }
        },
        "Name": "dev-jingood2-vod-EncodeCompleteRule",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "LambdaFunctionsStepFunctionsFunctionD2E87E65",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/Rules/EncodeCompleteRule/Resource"
      }
    },
    "RulesEncodeCompleteRuleAllowEventRulejingood2vodLambdaFunctionsStepFunctionsFunction4E5F3FE5D99131A2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunctionsStepFunctionsFunctionD2E87E65",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "RulesEncodeCompleteRuleE90C2521",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/Rules/EncodeCompleteRule/AllowEventRulejingood2vodLambdaFunctionsStepFunctionsFunction4E5F3FE5"
      }
    },
    "RulesEncodeErrorRule7A73B3FA": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "MediaConvert Error event rule",
        "EventPattern": {
          "source": [
            "aws.mediaconvert"
          ],
          "detail": {
            "status": [
              "ERROR"
            ]
          }
        },
        "Name": "dev-jingood2-vod-EncodeErrorRule",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/Rules/EncodeErrorRule/Resource"
      }
    },
    "RulesEncodeErrorRuleAllowEventRulejingood2vodLambdaFunctionsErrorHandlerFunction5D57680554874CFD": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunctionsErrorHandlerFunctionB60769DD",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "RulesEncodeErrorRule7A73B3FA",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/Rules/EncodeErrorRule/AllowEventRulejingood2vodLambdaFunctionsErrorHandlerFunction5D576805"
      }
    },
    "CustomResourcesUUID1685434C": {
      "Type": "Custom::UUID",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaFunctionsCustomResourceFunctionEF26B859",
            "Arn"
          ]
        },
        "Resource": "UUID"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/CustomResources/UUID/Default"
      }
    },
    "CustomResourcesAnonymousMetricsE015FCEA": {
      "Type": "Custom::LoadLambda",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaFunctionsCustomResourceFunctionEF26B859",
            "Arn"
          ]
        },
        "SolutionId": "SO0021",
        "UUID": {
          "Fn::GetAtt": [
            "CustomResourcesUUID1685434C",
            "UUID"
          ]
        },
        "Version": "1.0.0",
        "Transcoder": "MediaConvert",
        "WorkflowTrigger": "VideoFile",
        "Glacier": "DISABLED",
        "FrameCapture": true,
        "Resource": "AnonymousMetrics",
        "EnableMediaPackage": true
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/CustomResources/AnonymousMetrics/Default"
      }
    },
    "CustomResourcesMediaConvertEndPoint493A1B4F": {
      "Type": "Custom::LoadLambda",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaFunctionsCustomResourceFunctionEF26B859",
            "Arn"
          ]
        },
        "Resource": "EndPoint"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/CustomResources/MediaConvertEndPoint/Default"
      }
    },
    "CustomResourcesMediaConvertTemplates82F469B0": {
      "Type": "Custom::LoadLambda",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaFunctionsCustomResourceFunctionEF26B859",
            "Arn"
          ]
        },
        "Resource": "MediaConvertTemplates",
        "StackName": "dev-jingood2-vod",
        "EndPoint": {
          "Fn::GetAtt": [
            "CustomResourcesMediaConvertEndPoint493A1B4F",
            "EndpointUrl"
          ]
        },
        "EnableMediaPackage": true,
        "EnableNewTemplates": true
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/CustomResources/MediaConvertTemplates/Default"
      }
    },
    "CustomResourcesMediaPackageVod7F090D8D": {
      "Type": "Custom::LoadLambda",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaFunctionsCustomResourceFunctionEF26B859",
            "Arn"
          ]
        },
        "Resource": "MediaPackageVod",
        "StackName": "dev-jingood2-vod",
        "GroupId": "dev-jingood2-vod-packaging-group",
        "PackagingConfigurations": "HLS,DASH,MSS,CMAF",
        "DistributionId": {
          "Ref": "CloudFrontsCloudFrontDistribution221CB5B5"
        },
        "EnableMediaPackage": true
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/CustomResources/MediaPackageVod/Default"
      }
    },
    "CustomResourcesS3Config641ED51A": {
      "Type": "Custom::S3",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaFunctionsCustomResourceFunctionEF26B859",
            "Arn"
          ]
        },
        "Source": {
          "Ref": "S3BucketsSourceBucket4A23DAD8"
        },
        "IngestArn": {
          "Fn::GetAtt": [
            "LambdaFunctionsStepFunctionsFunctionD2E87E65",
            "Arn"
          ]
        },
        "Resource": "S3Notification",
        "WorkflowTrigger": "VideoFile"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/CustomResources/S3Config/Default"
      }
    },
    "StepFunctionsIngestWorkflowStateMachine79F0E7E7": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "IamRolesStepFunctionsServiceRoleCBE4EE63",
            "Arn"
          ]
        },
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"IngestWorkflowInputValidateTask\",\"States\":{\"IngestWorkflowInputValidateTask\":{\"Next\":\"IngestWorkflowMediaInfoTask\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsInputValidateFunction159C59A4",
                  "Arn"
                ]
              },
              "\"},\"IngestWorkflowMediaInfoTask\":{\"Next\":\"IngestWorkflowDynamoDbUpdateTask\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsMediaInfoFunctionE4E12675",
                  "Arn"
                ]
              },
              "\"},\"IngestWorkflowDynamoDbUpdateTask\":{\"Next\":\"IngestWorkflowSnsChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsDynamoDbUpdateFunction975864E9",
                  "Arn"
                ]
              },
              "\"},\"IngestWorkflowSnsChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.enableSns\",\"BooleanEquals\":true,\"Next\":\"IngestWorkflowSnsNotificationsTask\"}],\"Default\":\"IngestWorkflowProcessExecuteTask\"},\"IngestWorkflowProcessExecuteTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsStepFunctionsFunctionD2E87E65",
                  "Arn"
                ]
              },
              "\"},\"IngestWorkflowSnsNotificationsTask\":{\"Next\":\"IngestWorkflowProcessExecuteTask\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsSnsNotificationFunction2FFA56AD",
                  "Arn"
                ]
              },
              "\"}}}"
            ]
          ]
        },
        "StateMachineName": "dev-jingood2-vod-IngestWorkflowStateMachine"
      },
      "DependsOn": [
        "IamRolesStepFunctionsServiceRoleDefaultPolicyE5A6C739",
        "IamRolesStepFunctionsServiceRoleCBE4EE63"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/StepFunctions/IngestWorkflowStateMachine/Resource"
      }
    },
    "StepFunctionsProcessWorkflowStateMachine7036311E": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "IamRolesStepFunctionsServiceRoleCBE4EE63",
            "Arn"
          ]
        },
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"ProcessWorkflowProfilerTask\",\"States\":{\"ProcessWorkflowProfilerTask\":{\"Next\":\"ProcessWorkflowEncodingProfileCheckChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsProfilerFunction09767EC6",
                  "Arn"
                ]
              },
              "\"},\"ProcessWorkflowEncodingProfileCheckChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.isCustomTemplate\",\"BooleanEquals\":true,\"Next\":\"ProcessWorkflowCustomJobTemplatePass\"},{\"Variable\":\"$.encodingProfile\",\"NumericEquals\":2160,\"Next\":\"ProcessWorkflowJobTemplate2160pPass\"},{\"Variable\":\"$.encodingProfile\",\"NumericEquals\":1080,\"Next\":\"ProcessWorkflowJobTemplate1080pPass\"},{\"Variable\":\"$.encodingProfile\",\"NumericEquals\":720,\"Next\":\"ProcessWorkflowJobTemplate720pPass\"}]},\"ProcessWorkflowCustomJobTemplatePass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowAcceleratedTranscodingCheckChoice\"},\"ProcessWorkflowAcceleratedTranscodingCheckChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.acceleratedTranscoding\",\"StringEquals\":\"ENABLED\",\"Next\":\"processWorkflowAcceleratedTranscodingEnabledPass\"},{\"Variable\":\"$.acceleratedTranscoding\",\"StringEquals\":\"PREFERRED\",\"Next\":\"processWorkflowAcceleratedTranscodingPreferredPass\"},{\"Variable\":\"$.acceleratedTranscoding\",\"StringEquals\":\"DISABLED\",\"Next\":\"ProcessWorkflowAcceleratedTranscodingDisabledPass\"}]},\"ProcessWorkflowJobTemplate2160pPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowAcceleratedTranscodingCheckChoice\"},\"ProcessWorkflowJobTemplate1080pPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowAcceleratedTranscodingCheckChoice\"},\"ProcessWorkflowJobTemplate720pPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowAcceleratedTranscodingCheckChoice\"},\"processWorkflowAcceleratedTranscodingEnabledPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowFrameCaptureCheckChoice\"},\"ProcessWorkflowFrameCaptureCheckChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.frameCapture\",\"BooleanEquals\":true,\"Next\":\"ProcessWorkflowFrameCaptureOnPass\"}],\"Default\":\"ProcessWorkflowFrameCaptureOffPass\"},\"processWorkflowAcceleratedTranscodingPreferredPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowFrameCaptureCheckChoice\"},\"ProcessWorkflowAcceleratedTranscodingDisabledPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowFrameCaptureCheckChoice\"},\"ProcessWorkflowFrameCaptureOffPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowEncodeJobSubmitTask\"},\"ProcessWorkflowEncodeJobSubmitTask\":{\"Next\":\"ProcessWorkflowDynamoDbUpdateTask\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsEncodeFunctionF8E9C07D",
                  "Arn"
                ]
              },
              "\"},\"ProcessWorkflowFrameCaptureOnPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowEncodeJobSubmitTask\"},\"ProcessWorkflowDynamoDbUpdateTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsDynamoDbUpdateFunction975864E9",
                  "Arn"
                ]
              },
              "\"}}}"
            ]
          ]
        },
        "StateMachineName": "dev-jingood2-vod-ProcessWorkflowStateMachine"
      },
      "DependsOn": [
        "IamRolesStepFunctionsServiceRoleDefaultPolicyE5A6C739",
        "IamRolesStepFunctionsServiceRoleCBE4EE63"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/StepFunctions/ProcessWorkflowStateMachine/Resource"
      }
    },
    "StepFunctionsPublishWorkflowStateMachineF77DDA2E": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "IamRolesStepFunctionsServiceRoleCBE4EE63",
            "Arn"
          ]
        },
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"PublishWorkflowValidateEncodingOutputTask\",\"States\":{\"PublishWorkflowValidateEncodingOutputTask\":{\"Next\":\"PublishWorkflowArchiveSourceChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsOutputValidateFunction38F12556",
                  "Arn"
                ]
              },
              "\"},\"PublishWorkflowArchiveSourceChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.archiveSource\",\"StringEquals\":\"GLACIER\",\"Next\":\"PublishWorkflowArchiveTask\"},{\"Variable\":\"$.archiveSource\",\"StringEquals\":\"DEEP_ARCHIVE\",\"Next\":\"PublishWorkflowDeepArchiveTask\"}],\"Default\":\"PublishWorkflowMediaPackageChoice\"},\"PublishWorkflowMediaPackageChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.enableMediaPackage\",\"BooleanEquals\":true,\"Next\":\"PublishWorkflowMediaPackageAssetsTask\"}],\"Default\":\"PublishWorkflowDynamoDbUpdateTask\"},\"PublishWorkflowArchiveTask\":{\"Next\":\"PublishWorkflowMediaPackageChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsArchiveSourceFunctionC2D80DB5",
                  "Arn"
                ]
              },
              "\"},\"PublishWorkflowDeepArchiveTask\":{\"Next\":\"PublishWorkflowMediaPackageChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsArchiveSourceFunctionC2D80DB5",
                  "Arn"
                ]
              },
              "\"},\"PublishWorkflowDynamoDbUpdateTask\":{\"Next\":\"PublishWorkflowSqsChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsDynamoDbUpdateFunction975864E9",
                  "Arn"
                ]
              },
              "\"},\"PublishWorkflowMediaPackageAssetsTask\":{\"Next\":\"PublishWorkflowDynamoDbUpdateTask\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsMediaPackageAssetsFunctionBBCC2F3F",
                  "Arn"
                ]
              },
              "\"},\"PublishWorkflowSqsChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.enableSqs\",\"BooleanEquals\":true,\"Next\":\"PublishWorkflowSqsSendMessageTask\"}],\"Default\":\"PublishWorkflowSnsChoice\"},\"PublishWorkflowSnsChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.enableSns\",\"BooleanEquals\":true,\"Next\":\"PublishWorkflowSnsNotificationTask\"}],\"Default\":\"PublishWorkflowCompletePass\"},\"PublishWorkflowSqsSendMessageTask\":{\"Next\":\"PublishWorkflowSnsChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsSqsSendMessageFunction2C27587E",
                  "Arn"
                ]
              },
              "\"},\"PublishWorkflowCompletePass\":{\"Type\":\"Pass\",\"End\":true},\"PublishWorkflowSnsNotificationTask\":{\"Next\":\"PublishWorkflowCompletePass\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaFunctionsSnsNotificationFunction2FFA56AD",
                  "Arn"
                ]
              },
              "\"}}}"
            ]
          ]
        },
        "StateMachineName": "dev-jingood2-vod-PublishWorkflowStateMachine"
      },
      "DependsOn": [
        "IamRolesStepFunctionsServiceRoleDefaultPolicyE5A6C739",
        "IamRolesStepFunctionsServiceRoleCBE4EE63"
      ],
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/StepFunctions/PublishWorkflowStateMachine/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/21SwW7CMAz9lt3TMEDiPMaEhMYEY9PuaWrAtE1YnDChqv8+JwVRpp38Xuz37NodyuFoKB8fntQPZbooB422DmTz4ZUuxcwa8i5oL6ZE4Plxh2YnZoG8rTdANjgNYrY1fbwK/hh8RCwv0KM1rYj2ja5sKLbOGi+blUP2mmoNRIsCjEd/TppYM481/1covYe1rVB31T36gjwr5iE2jLk+b0VxNqq2RS4586nyCkRZk2xeIfnEMK1QUSQJtILGsnkOuoT0LRfUhdsAd7wjz4qA1YbdP+0RdSzrwEfISTs8Xifsc1Z8s+I9QEhbTKAVqGrZbGzVbTnGW+8OtaJSdV4o2SzVGdwXOLrY3/F5MPrat4/X4Gok6iYYZyremWQ6t4ATb52H2oRLf45c5eG4vThwcra3yIdfs1LwD+LhjW+CJgn6/I8w84pKkss0+8KcbAltK4wtQB5ocBpO5ESOHg6EmLnAt69Bbrr4CxXjejezAgAA"
      },
      "Metadata": {
        "aws:cdk:path": "jingood2-vod/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "OutputsCloudFrontOutput06459F4F": {
      "Description": "dev-jingood2-vod CloudFront Domain Name",
      "Value": {
        "Fn::GetAtt": [
          "CloudFrontsCloudFrontDistribution221CB5B5",
          "DomainName"
        ]
      },
      "Export": {
        "Name": "dev-jingood2-vod-CloudFront"
      }
    },
    "OutputsDestinationBucketOutput64AC2051": {
      "Description": "dev-jingood2-vod Destination S3 Bucket",
      "Value": {
        "Ref": "S3BucketsDestinationBucketD831CA48"
      },
      "Export": {
        "Name": "dev-jingood2-vod-DestinationBucket"
      }
    },
    "OutputsDynamoDbTableOutput2DD0C2CD": {
      "Description": "dev-jingood2-vod DynamoDB Table",
      "Value": "dev-jingood2-vod-VideoInfo",
      "Export": {
        "Name": "dev-jingood2-vod-DynamoDbTable"
      }
    },
    "OutputsSourceBucketOutput2238DC26": {
      "Description": "dev-jingood2-vod Source S3 Bucket",
      "Value": {
        "Ref": "S3BucketsSourceBucket4A23DAD8"
      },
      "Export": {
        "Name": "dev-jingood2-vod-SourceBucket"
      }
    },
    "OutputsSnsTopicOutput76A2004B": {
      "Description": "dev-jingood2-vod SNS Notification Topic",
      "Value": {
        "Ref": "SnsTopicsNotificationsDE98E041"
      },
      "Export": {
        "Name": "dev-jingood2-vod-SnsTopic"
      }
    },
    "OutputsSqsQueueArnOutput880A7CF0": {
      "Description": "dev-jingood2-vod SQS Queue ARN",
      "Value": {
        "Fn::GetAtt": [
          "SqsQueuesMainSqsQueue3DF56461",
          "Arn"
        ]
      },
      "Export": {
        "Name": "dev-jingood2-vod-SqsQueueArn"
      }
    },
    "OutputsSqsQueueUrlOutput678DDA77": {
      "Description": "dev-jingood2-vod SQS Queue URL",
      "Value": {
        "Ref": "SqsQueuesMainSqsQueue3DF56461"
      },
      "Export": {
        "Name": "dev-jingood2-vod-SqsQueueUrl"
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}