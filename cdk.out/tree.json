{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "@aws-cdk/core.Construct",
          "version": "1.121.0"
        }
      },
      "jingood2-vod": {
        "id": "jingood2-vod",
        "path": "jingood2-vod",
        "children": {
          "ContextVariables": {
            "id": "ContextVariables",
            "path": "jingood2-vod/ContextVariables",
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "CloudFrontOriginAccessIdentities": {
            "id": "CloudFrontOriginAccessIdentities",
            "path": "jingood2-vod/CloudFrontOriginAccessIdentities",
            "children": {
              "CloudfrontDestinationOriginAccessIdentity": {
                "id": "CloudfrontDestinationOriginAccessIdentity",
                "path": "jingood2-vod/CloudFrontOriginAccessIdentities/CloudfrontDestinationOriginAccessIdentity",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/CloudFrontOriginAccessIdentities/CloudfrontDestinationOriginAccessIdentity/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                      "aws:cdk:cloudformation:props": {
                        "cloudFrontOriginAccessIdentityConfig": {
                          "comment": "Allows CloudFront to reach the bucket"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-cloudfront.OriginAccessIdentity",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "DynamoDbTables": {
            "id": "DynamoDbTables",
            "path": "jingood2-vod/DynamoDbTables",
            "children": {
              "VideoInfoDynamoDbTable": {
                "id": "VideoInfoDynamoDbTable",
                "path": "jingood2-vod/DynamoDbTables/VideoInfoDynamoDbTable",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::DynamoDB::Table",
                  "aws:cdk:cloudformation:props": {
                    "keySchema": [
                      {
                        "attributeName": "guid",
                        "keyType": "HASH"
                      }
                    ],
                    "attributeDefinitions": [
                      {
                        "attributeName": "guid",
                        "attributeType": "S"
                      },
                      {
                        "attributeName": "srcBucket",
                        "attributeType": "S"
                      },
                      {
                        "attributeName": "startTime",
                        "attributeType": "S"
                      }
                    ],
                    "billingMode": "PAY_PER_REQUEST",
                    "globalSecondaryIndexes": [
                      {
                        "indexName": "srcBucket-startTime-index",
                        "keySchema": [
                          {
                            "attributeName": "srcBucket",
                            "keyType": "HASH"
                          },
                          {
                            "attributeName": "startTime",
                            "keyType": "RANGE"
                          }
                        ],
                        "projection": {
                          "projectionType": "ALL"
                        }
                      }
                    ],
                    "pointInTimeRecoverySpecification": {
                      "pointInTimeRecoveryEnabled": true
                    },
                    "tableName": "dev-jingood2-vod-VideoInfo"
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-dynamodb.CfnTable",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "EventPatterns": {
            "id": "EventPatterns",
            "path": "jingood2-vod/EventPatterns",
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "KmsKeys": {
            "id": "KmsKeys",
            "path": "jingood2-vod/KmsKeys",
            "children": {
              "SnsKmsMasterKey": {
                "id": "SnsKmsMasterKey",
                "path": "jingood2-vod/KmsKeys/SnsKmsMasterKey",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/KmsKeys/SnsKmsMasterKey/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Key",
                      "aws:cdk:cloudformation:props": {
                        "keyPolicy": {
                          "Statement": [
                            {
                              "Action": "kms:*",
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":root"
                                    ]
                                  ]
                                }
                              },
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-kms.CfnKey",
                      "version": "1.121.0"
                    }
                  },
                  "Alias": {
                    "id": "Alias",
                    "path": "jingood2-vod/KmsKeys/SnsKmsMasterKey/Alias",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "jingood2-vod/KmsKeys/SnsKmsMasterKey/Alias/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::KMS::Alias",
                          "aws:cdk:cloudformation:props": {
                            "aliasName": "alias/dev-jingood2-vod-SnsMasterKey",
                            "targetKeyId": {
                              "Fn::GetAtt": [
                                "KmsKeysSnsKmsMasterKey326B8D82",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-kms.CfnAlias",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-kms.Alias",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-kms.Key",
                  "version": "1.121.0"
                }
              },
              "SqsKmsMasterKey": {
                "id": "SqsKmsMasterKey",
                "path": "jingood2-vod/KmsKeys/SqsKmsMasterKey",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/KmsKeys/SqsKmsMasterKey/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Key",
                      "aws:cdk:cloudformation:props": {
                        "keyPolicy": {
                          "Statement": [
                            {
                              "Action": "kms:*",
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":root"
                                    ]
                                  ]
                                }
                              },
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-kms.CfnKey",
                      "version": "1.121.0"
                    }
                  },
                  "Alias": {
                    "id": "Alias",
                    "path": "jingood2-vod/KmsKeys/SqsKmsMasterKey/Alias",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "jingood2-vod/KmsKeys/SqsKmsMasterKey/Alias/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::KMS::Alias",
                          "aws:cdk:cloudformation:props": {
                            "aliasName": "alias/dev-jingood2-vod-SqsMasterKey",
                            "targetKeyId": {
                              "Fn::GetAtt": [
                                "KmsKeysSqsKmsMasterKey2775173E",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-kms.CfnAlias",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-kms.Alias",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-kms.Key",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "Permissions": {
            "id": "Permissions",
            "path": "jingood2-vod/Permissions",
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "S3Buckets": {
            "id": "S3Buckets",
            "path": "jingood2-vod/S3Buckets",
            "children": {
              "LogsBucket": {
                "id": "LogsBucket",
                "path": "jingood2-vod/S3Buckets/LogsBucket",
                "children": {
                  "Notifications": {
                    "id": "Notifications",
                    "path": "jingood2-vod/S3Buckets/LogsBucket/Notifications",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/S3Buckets/LogsBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "accessControl": "LogDeliveryWrite",
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "AES256"
                              }
                            }
                          ]
                        },
                        "bucketName": "dev-jingood2-vod-logs",
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.CfnBucket",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-s3.Bucket",
                  "version": "1.121.0"
                }
              },
              "DestinationBucket": {
                "id": "DestinationBucket",
                "path": "jingood2-vod/S3Buckets/DestinationBucket",
                "children": {
                  "Notifications": {
                    "id": "Notifications",
                    "path": "jingood2-vod/S3Buckets/DestinationBucket/Notifications",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/S3Buckets/DestinationBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "AES256"
                              }
                            }
                          ]
                        },
                        "bucketName": "dev-jingood2-vod-destination",
                        "corsConfiguration": {
                          "corsRules": [
                            {
                              "maxAge": 3000,
                              "allowedHeaders": [
                                "*"
                              ],
                              "allowedMethods": [
                                "GET"
                              ],
                              "allowedOrigins": [
                                "*"
                              ]
                            }
                          ]
                        },
                        "loggingConfiguration": {
                          "destinationBucketName": {
                            "Ref": "S3BucketsLogsBucket9F3A5E35"
                          },
                          "logFilePrefix": "s3-access/"
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.CfnBucket",
                      "version": "1.121.0"
                    }
                  },
                  "Policy": {
                    "id": "Policy",
                    "path": "jingood2-vod/S3Buckets/DestinationBucket/Policy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "jingood2-vod/S3Buckets/DestinationBucket/Policy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                          "aws:cdk:cloudformation:props": {
                            "bucket": {
                              "Ref": "S3BucketsDestinationBucketD831CA48"
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:GetObject",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "CanonicalUser": {
                                      "Fn::GetAtt": [
                                        "CloudFrontOriginAccessIdentitiesCloudfrontDestinationOriginAccessIdentityC5A4B16F",
                                        "S3CanonicalUserId"
                                      ]
                                    }
                                  },
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":s3:::",
                                        {
                                          "Ref": "S3BucketsDestinationBucketD831CA48"
                                        },
                                        "/*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.CfnBucketPolicy",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.BucketPolicy",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-s3.Bucket",
                  "version": "1.121.0"
                }
              },
              "SourceBucket": {
                "id": "SourceBucket",
                "path": "jingood2-vod/S3Buckets/SourceBucket",
                "children": {
                  "Notifications": {
                    "id": "Notifications",
                    "path": "jingood2-vod/S3Buckets/SourceBucket/Notifications",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/S3Buckets/SourceBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "AES256"
                              }
                            }
                          ]
                        },
                        "bucketName": "dev-jingood2-vod-source",
                        "lifecycleConfiguration": {
                          "rules": [
                            {
                              "id": "dev-jingood2-vod-source-archive",
                              "status": "Enabled",
                              "transitions": [
                                {
                                  "storageClass": "GLACIER",
                                  "transitionInDays": 1
                                }
                              ],
                              "tagFilters": [
                                {
                                  "key": "key",
                                  "value": "dev-jingood2-vod"
                                },
                                {
                                  "key": "value",
                                  "value": "GLACIER"
                                }
                              ]
                            },
                            {
                              "id": "dev-jingood2-vod-source-deep-archive",
                              "status": "Enabled",
                              "transitions": [
                                {
                                  "storageClass": "DEEP_ARCHIVE",
                                  "transitionInDays": 1
                                }
                              ],
                              "tagFilters": [
                                {
                                  "key": "key",
                                  "value": "dev-jingood2-vod"
                                },
                                {
                                  "key": "value",
                                  "value": "DEEP_ARCHIVE"
                                }
                              ]
                            }
                          ]
                        },
                        "loggingConfiguration": {
                          "destinationBucketName": {
                            "Ref": "S3BucketsLogsBucket9F3A5E35"
                          },
                          "logFilePrefix": "s3-access/"
                        },
                        "ownershipControls": {
                          "rules": [
                            {
                              "objectOwnership": "BucketOwnerPreferred"
                            }
                          ]
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.CfnBucket",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-s3.Bucket",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "SnsTopics": {
            "id": "SnsTopics",
            "path": "jingood2-vod/SnsTopics",
            "children": {
              "Notifications": {
                "id": "Notifications",
                "path": "jingood2-vod/SnsTopics/Notifications",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/SnsTopics/Notifications/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                      "aws:cdk:cloudformation:props": {
                        "displayName": "dev-jingood2-vod-Notifications"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-sns.CfnTopic",
                      "version": "1.121.0"
                    }
                  },
                  "jingood2@gmail.com": {
                    "id": "jingood2@gmail.com",
                    "path": "jingood2-vod/SnsTopics/Notifications/jingood2@gmail.com",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "jingood2-vod/SnsTopics/Notifications/jingood2@gmail.com/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
                          "aws:cdk:cloudformation:props": {
                            "protocol": "email",
                            "topicArn": {
                              "Ref": "SnsTopicsNotificationsDE98E041"
                            },
                            "endpoint": "jingood2@gmail.com"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-sns.CfnSubscription",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-sns.Subscription",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-sns.Topic",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "SqsQueues": {
            "id": "SqsQueues",
            "path": "jingood2-vod/SqsQueues",
            "children": {
              "SqsDeadLetterQueue": {
                "id": "SqsDeadLetterQueue",
                "path": "jingood2-vod/SqsQueues/SqsDeadLetterQueue",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/SqsQueues/SqsDeadLetterQueue/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SQS::Queue",
                      "aws:cdk:cloudformation:props": {
                        "queueName": "dev-jingood2-vod-SqsDeadLetterQueue",
                        "visibilityTimeout": 120
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-sqs.CfnQueue",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-sqs.Queue",
                  "version": "1.121.0"
                }
              },
              "MainSqsQueue": {
                "id": "MainSqsQueue",
                "path": "jingood2-vod/SqsQueues/MainSqsQueue",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/SqsQueues/MainSqsQueue/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SQS::Queue",
                      "aws:cdk:cloudformation:props": {
                        "queueName": "dev-jingood2-vod-MainSqsQueue",
                        "redrivePolicy": {
                          "deadLetterTargetArn": {
                            "Fn::GetAtt": [
                              "SqsQueuesSqsDeadLetterQueueB220E2ED",
                              "Arn"
                            ]
                          },
                          "maxReceiveCount": 1
                        },
                        "visibilityTimeout": 120
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-sqs.CfnQueue",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-sqs.Queue",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "CloudFronts": {
            "id": "CloudFronts",
            "path": "jingood2-vod/CloudFronts",
            "children": {
              "CloudFrontDistributionCachePolicy": {
                "id": "CloudFrontDistributionCachePolicy",
                "path": "jingood2-vod/CloudFronts/CloudFrontDistributionCachePolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/CloudFronts/CloudFrontDistributionCachePolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFront::CachePolicy",
                      "aws:cdk:cloudformation:props": {
                        "cachePolicyConfig": {
                          "name": {
                            "Fn::Join": [
                              "",
                              [
                                "jingood2vodCloudFrontsCloudFrontDistributionCachePolicy99F56D3C-",
                                {
                                  "Ref": "AWS::Region"
                                }
                              ]
                            ]
                          },
                          "minTtl": 0,
                          "maxTtl": 31536000,
                          "defaultTtl": 86400,
                          "parametersInCacheKeyAndForwardedToOrigin": {
                            "cookiesConfig": {
                              "cookieBehavior": "none"
                            },
                            "headersConfig": {
                              "headerBehavior": "whitelist",
                              "headers": [
                                "Origin",
                                "Access-Control-Request-Method",
                                "Access-Control-Request-Headers"
                              ]
                            },
                            "enableAcceptEncodingGzip": false,
                            "enableAcceptEncodingBrotli": false,
                            "queryStringsConfig": {
                              "queryStringBehavior": "none"
                            }
                          }
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-cloudfront.CachePolicy",
                  "version": "1.121.0"
                }
              },
              "CloudFrontDistribution": {
                "id": "CloudFrontDistribution",
                "path": "jingood2-vod/CloudFronts/CloudFrontDistribution",
                "children": {
                  "Origin1": {
                    "id": "Origin1",
                    "path": "jingood2-vod/CloudFronts/CloudFrontDistribution/Origin1",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/CloudFronts/CloudFrontDistribution/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                      "aws:cdk:cloudformation:props": {
                        "distributionConfig": {
                          "enabled": true,
                          "origins": [
                            {
                              "domainName": {
                                "Fn::GetAtt": [
                                  "S3BucketsDestinationBucketD831CA48",
                                  "RegionalDomainName"
                                ]
                              },
                              "id": "jingood2vodCloudFrontsCloudFrontDistributionOrigin160EABC1B",
                              "s3OriginConfig": {
                                "originAccessIdentity": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "origin-access-identity/cloudfront/",
                                      {
                                        "Ref": "CloudFrontOriginAccessIdentitiesCloudfrontDestinationOriginAccessIdentityC5A4B16F"
                                      }
                                    ]
                                  ]
                                }
                              }
                            }
                          ],
                          "defaultCacheBehavior": {
                            "pathPattern": "*",
                            "targetOriginId": "jingood2vodCloudFrontsCloudFrontDistributionOrigin160EABC1B",
                            "allowedMethods": [
                              "GET",
                              "HEAD"
                            ],
                            "cachePolicyId": {
                              "Ref": "CloudFrontsCloudFrontDistributionCachePolicyF0FE97E0"
                            },
                            "compress": true,
                            "viewerProtocolPolicy": "redirect-to-https"
                          },
                          "httpVersion": "http2",
                          "ipv6Enabled": true,
                          "logging": {
                            "bucket": {
                              "Fn::GetAtt": [
                                "S3BucketsLogsBucket9F3A5E35",
                                "RegionalDomainName"
                              ]
                            },
                            "prefix": "cloudfront/"
                          },
                          "priceClass": "PriceClass_100"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-cloudfront.Distribution",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "PolicyStatements": {
            "id": "PolicyStatements",
            "path": "jingood2-vod/PolicyStatements",
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "PolicyDocuments": {
            "id": "PolicyDocuments",
            "path": "jingood2-vod/PolicyDocuments",
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "IamRoles": {
            "id": "IamRoles",
            "path": "jingood2-vod/IamRoles",
            "children": {
              "ArchiveSourceRole": {
                "id": "ArchiveSourceRole",
                "path": "jingood2-vod/IamRoles/ArchiveSourceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/ArchiveSourceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-ArchiveSourceRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":lambda:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "s3:PutObjectTagging",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "S3BucketsSourceBucket4A23DAD8",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-ArchiveSourceRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "CustomResourceRole": {
                "id": "CustomResourceRole",
                "path": "jingood2-vod/IamRoles/CustomResourceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/CustomResourceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-CustomResourceRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "cloudfront:GetDistributionConfig",
                                    "cloudfront:UpdateDistribution"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":cloudfront::",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":distribution/",
                                        {
                                          "Ref": "CloudFrontsCloudFrontDistribution221CB5B5"
                                        }
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "mediaconvert:CreatePreset",
                                    "mediaconvert:CreateJobTemplate",
                                    "mediaconvert:DeletePreset",
                                    "mediaconvert:DeleteJobTemplate",
                                    "mediaconvert:DescribeEndpoints",
                                    "mediaconvert:ListJobTemplates"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":mediaconvert:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "mediapackage-vod:CreatePackagingConfiguration",
                                    "mediapackage-vod:CreatePackagingGroup",
                                    "mediapackage-vod:ListAssets",
                                    "mediapackage-vod:ListPackagingConfigurations",
                                    "mediapackage-vod:ListPackagingGroups"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "mediapackage-vod:DeleteAsset",
                                    "mediapackage-vod:DeletePackagingConfiguration"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":mediapackage-vod:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":assets/*"
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":mediapackage-vod:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":packaging-configurations/packaging-config-*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "mediapackage-vod:DescribePackagingGroup",
                                    "mediapackage-vod:DeletePackagingGroup"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":mediapackage-vod:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":packaging-groups/dev-jingood2-vod-packaging-group"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:PutBucketNotification",
                                    "s3:PutObject",
                                    "s3:PutObjectAcl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "S3BucketsSourceBucket4A23DAD8",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-CustomResourceRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "DynamoUpdateRole": {
                "id": "DynamoUpdateRole",
                "path": "jingood2-vod/IamRoles/DynamoUpdateRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/DynamoUpdateRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-DynamoDbUpdateRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "dynamoDb:UpdateItem",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":dynamodb:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":table/dev-jingood2-vod-VideoInfo"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":lambda:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-DynamoUpdateRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "EncodeRole": {
                "id": "EncodeRole",
                "path": "jingood2-vod/IamRoles/EncodeRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/EncodeRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-EncodeRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "iam:PassRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "IamRolesMediaConvertRoleDBD25335",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":lambda:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "mediaconvert:CreateJob",
                                    "mediaconvert:GetJobTemplate"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":mediaconvert:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "s3:GetObject",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "S3BucketsSourceBucket4A23DAD8",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "s3:PutObject",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "S3BucketsDestinationBucketD831CA48",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-EncodeRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "ErrorHandlerRole": {
                "id": "ErrorHandlerRole",
                "path": "jingood2-vod/IamRoles/ErrorHandlerRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/ErrorHandlerRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-ErrorHandlerRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "dynamodb:UpdateItem",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":dynamodb:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":table/dev-jingood2-vod-VideoInfo"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "sns:Publish",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Ref": "SnsTopicsNotificationsDE98E041"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-ErrorHandlerRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "jingood2-vod/IamRoles/ErrorHandlerRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "jingood2-vod/IamRoles/ErrorHandlerRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "dynamodb:UpdateItem",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":dynamodb:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":table/dev-jingood2-vod-VideoInfo"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "IamRolesErrorHandlerRoleDefaultPolicy63EE2D6E",
                            "roles": [
                              {
                                "Ref": "IamRolesErrorHandlerRole4EC25F0C"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Policy",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "InputValidateRole": {
                "id": "InputValidateRole",
                "path": "jingood2-vod/IamRoles/InputValidateRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/InputValidateRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-InputValidateRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":lambda:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "s3:GetObject",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        {
                                          "Fn::GetAtt": [
                                            "S3BucketsSourceBucket4A23DAD8",
                                            "Arn"
                                          ]
                                        },
                                        "/*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-InputValidateRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "MediaConvertRole": {
                "id": "MediaConvertRole",
                "path": "jingood2-vod/IamRoles/MediaConvertRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/MediaConvertRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "mediaconvert.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-MediaConvertRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "execute-api:Invoke",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":execute-api:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:GetObject",
                                    "s3:PutObject"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "S3BucketsSourceBucket4A23DAD8",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "S3BucketsDestinationBucketD831CA48",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-MediaConvertRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "MediaInfoRole": {
                "id": "MediaInfoRole",
                "path": "jingood2-vod/IamRoles/MediaInfoRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/MediaInfoRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-MediaInfoRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":lambda:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "s3:GetObject",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        {
                                          "Fn::GetAtt": [
                                            "S3BucketsSourceBucket4A23DAD8",
                                            "Arn"
                                          ]
                                        },
                                        "/*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-MediaInfoRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "MediaPackageAssetsRole": {
                "id": "MediaPackageAssetsRole",
                "path": "jingood2-vod/IamRoles/MediaPackageAssetsRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/MediaPackageAssetsRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-MediaPackageAssetsRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "iam:PassRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "IamRolesMediaPackageVodRole2F296B82",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":lambda:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*s"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "mediapackage-vod:CreateAsset",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-MediaPackageAssetsRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "MediaPackageVodRole": {
                "id": "MediaPackageVodRole",
                "path": "jingood2-vod/IamRoles/MediaPackageVodRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/MediaPackageVodRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "mediapackage.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-MediaPackageVodRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetObject",
                                    "s3:GetBucketLocation",
                                    "s3:GetBucketRequestPayment"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "S3BucketsDestinationBucketD831CA48",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "S3BucketsDestinationBucketD831CA48",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-MediaPackageVodRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "OutputValidateRole": {
                "id": "OutputValidateRole",
                "path": "jingood2-vod/IamRoles/OutputValidateRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/OutputValidateRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-OutputValidateRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "dynamodb:GetItem",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":dynamodb:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":table/dev-jingood2-vod-VideoInfo"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":lambda:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "s3:ListBucket",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "S3BucketsDestinationBucketD831CA48",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-OutputValidateRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "ProfilerRole": {
                "id": "ProfilerRole",
                "path": "jingood2-vod/IamRoles/ProfilerRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/ProfilerRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-ProfilerRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "dynamodb:GetItem",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":dynamodb:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":table/dev-jingood2-vod-VideoInfo"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":lambda:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-ProfilerRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "SnsNotificationRole": {
                "id": "SnsNotificationRole",
                "path": "jingood2-vod/IamRoles/SnsNotificationRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/SnsNotificationRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-SnsNotificationRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "kms:GenerateDataKey",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "KmsKeysSnsKmsMasterKey326B8D82",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":lambda:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "log:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "sns:Publish",
                                  "Condition": {
                                    "Bool": {
                                      "aws:SecureTransport": "true"
                                    }
                                  },
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Ref": "SnsTopicsNotificationsDE98E041"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-SnsNotificationRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "SqsSendMessageRole": {
                "id": "SqsSendMessageRole",
                "path": "jingood2-vod/IamRoles/SqsSendMessageRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/SqsSendMessageRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-SqsSendMessageRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "kms:GenerateDataKey",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "KmsKeysSqsKmsMasterKey2775173E",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":lambda:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "log:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "sqs:SendMessage",
                                  "Condition": {
                                    "Bool": {
                                      "aws:SecureTransport": "true"
                                    }
                                  },
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "SqsQueuesMainSqsQueue3DF56461",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-SqsSendMessageRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "StepFunctionsRole": {
                "id": "StepFunctionsRole",
                "path": "jingood2-vod/IamRoles/StepFunctionsRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/StepFunctionsRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-StepFunctionsRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":lambda:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":function:dev-jingood2-vod-ErrorHandlerLambdaFunction"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":logs:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":log-group:/aws/lambda/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "states:StartExecution",
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":states:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":stateMachine:dev-jingood2-vod-IngestWorkflowStateMachine"
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":states:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":stateMachine:dev-jingood2-vod-ProcessWorkflowStateMachine"
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":states:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":stateMachine:dev-jingood2-vod-PublishWorkflowStateMachine"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-StepFunctionsRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              },
              "StepFunctionsServiceRole": {
                "id": "StepFunctionsServiceRole",
                "path": "jingood2-vod/IamRoles/StepFunctionsServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/IamRoles/StepFunctionsServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "states.",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ".amazonaws.com"
                                    ]
                                  ]
                                }
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policies": [
                          {
                            "policyName": "dev-jingood2-vod-StepFunctionsServiceRolePolicyDocument",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":lambda:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":function:*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "roleName": "dev-jingood2-vod-StepFunctionsServiceRole"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.121.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "jingood2-vod/IamRoles/StepFunctionsServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "jingood2-vod/IamRoles/StepFunctionsServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaFunctionsInputValidateFunction159C59A4",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaFunctionsMediaInfoFunctionE4E12675",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaFunctionsDynamoDbUpdateFunction975864E9",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaFunctionsStepFunctionsFunctionD2E87E65",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaFunctionsSnsNotificationFunction2FFA56AD",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaFunctionsProfilerFunction09767EC6",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaFunctionsEncodeFunctionF8E9C07D",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaFunctionsOutputValidateFunction38F12556",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaFunctionsArchiveSourceFunctionC2D80DB5",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaFunctionsMediaPackageAssetsFunctionBBCC2F3F",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaFunctionsSqsSendMessageFunction2C27587E",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "IamRolesStepFunctionsServiceRoleDefaultPolicyE5A6C739",
                            "roles": [
                              {
                                "Ref": "IamRolesStepFunctionsServiceRoleCBE4EE63"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Policy",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "LambdaFunctions": {
            "id": "LambdaFunctions",
            "path": "jingood2-vod/LambdaFunctions",
            "children": {
              "LambdaLayer": {
                "id": "LambdaLayer",
                "path": "jingood2-vod/LambdaFunctions/LambdaLayer",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/LambdaLayer/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/LambdaLayer/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/LambdaLayer/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/LambdaLayer/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/LambdaLayer/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::LayerVersion",
                      "aws:cdk:cloudformation:props": {
                        "content": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "00fbe6642b5d01784c40d80d3b386fd84d6aa0bdcef0b42b37c8a08208af5403.zip"
                        },
                        "compatibleRuntimes": [
                          "nodejs12.x"
                        ],
                        "description": "A layer to test LambdaLayers",
                        "licenseInfo": "Apache-2.0"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnLayerVersion",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.LayerVersion",
                  "version": "1.121.0"
                }
              },
              "ErrorHandlerFunction": {
                "id": "ErrorHandlerFunction",
                "path": "jingood2-vod/LambdaFunctions/ErrorHandlerFunction",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/ErrorHandlerFunction/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/ErrorHandlerFunction/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/ErrorHandlerFunction/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/ErrorHandlerFunction/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/ErrorHandlerFunction/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "c6d6c76cbe151da0062ecebf457f8ef38edb2e04d3d81e96a0c632330bfaccbd.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "IamRolesErrorHandlerRole4EC25F0C",
                            "Arn"
                          ]
                        },
                        "description": "Captures and processes workflow errors",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                            "DynamoDBTable": "dev-jingood2-vod-VideoInfo",
                            "SnsTopic": {
                              "Ref": "SnsTopicsNotificationsDE98E041"
                            }
                          }
                        },
                        "functionName": "dev-jingood2-vod-ErrorHandlerLambdaFunction",
                        "handler": "index.handler",
                        "runtime": "nodejs12.x",
                        "timeout": 120
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                      "version": "1.121.0"
                    }
                  },
                  "ErrorHandlerS3LambdaInvokeVideoPermission": {
                    "id": "ErrorHandlerS3LambdaInvokeVideoPermission",
                    "path": "jingood2-vod/LambdaFunctions/ErrorHandlerFunction/ErrorHandlerS3LambdaInvokeVideoPermission",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Fn::GetAtt": [
                            "LambdaFunctionsErrorHandlerFunctionB60769DD",
                            "Arn"
                          ]
                        },
                        "principal": "s3.amazonaws.com",
                        "sourceAccount": {
                          "Ref": "AWS::AccountId"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnPermission",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.Function",
                  "version": "1.121.0"
                }
              },
              "ArchiveSourceFunction": {
                "id": "ArchiveSourceFunction",
                "path": "jingood2-vod/LambdaFunctions/ArchiveSourceFunction",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/ArchiveSourceFunction/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/ArchiveSourceFunction/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/ArchiveSourceFunction/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/ArchiveSourceFunction/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/ArchiveSourceFunction/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "3a40031c12e655f644a942961a86cd0354f2adf326acf7a69d4b068724397e79.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "IamRolesArchiveSourceRoleE62C021F",
                            "Arn"
                          ]
                        },
                        "description": "Updates tags on source files to enable Glacier",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                            "ErrorHandler": {
                              "Fn::GetAtt": [
                                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "functionName": "dev-jingood2-vod-ArchiveSourceLambdaFunction",
                        "handler": "index.handler",
                        "runtime": "nodejs12.x",
                        "timeout": 120
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.Function",
                  "version": "1.121.0"
                }
              },
              "CustomResourceFunction": {
                "id": "CustomResourceFunction",
                "path": "jingood2-vod/LambdaFunctions/CustomResourceFunction",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/CustomResourceFunction/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/CustomResourceFunction/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/CustomResourceFunction/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/CustomResourceFunction/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/CustomResourceFunction/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "4965882527ed43a8a56a6140ad4c3b1a3304e43f0be0d04e703337aa53845b0d.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "IamRolesCustomResourceRole7D5864F5",
                            "Arn"
                          ]
                        },
                        "description": "Used to deploy resources not supported by CloudFormation",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "functionName": "dev-jingood2-vod-CustomResourceLambdaFunction",
                        "handler": "index.handler",
                        "layers": [
                          {
                            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
                          }
                        ],
                        "runtime": "nodejs12.x",
                        "timeout": 180
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.Function",
                  "version": "1.121.0"
                }
              },
              "DynamoDbUpdateFunction": {
                "id": "DynamoDbUpdateFunction",
                "path": "jingood2-vod/LambdaFunctions/DynamoDbUpdateFunction",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/DynamoDbUpdateFunction/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/DynamoDbUpdateFunction/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/DynamoDbUpdateFunction/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/DynamoDbUpdateFunction/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/DynamoDbUpdateFunction/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "968e9af0f80ea124ebed0a2a481bb76075ad009b586daa9d34b82118d759b7c8.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "IamRolesDynamoUpdateRole5280FBC7",
                            "Arn"
                          ]
                        },
                        "description": "Updates DynamoDB with event data",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                            "DynamoDBTable": "dev-jingood2-vod-VideoInfo",
                            "ErrorHandler": {
                              "Fn::GetAtt": [
                                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "functionName": "dev-jingood2-vod-DynamoDbUpdateLambdaFunction",
                        "handler": "index.handler",
                        "layers": [
                          {
                            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
                          }
                        ],
                        "runtime": "nodejs12.x",
                        "timeout": 120
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.Function",
                  "version": "1.121.0"
                }
              },
              "EncodeFunction": {
                "id": "EncodeFunction",
                "path": "jingood2-vod/LambdaFunctions/EncodeFunction",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/EncodeFunction/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/EncodeFunction/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/EncodeFunction/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/EncodeFunction/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/EncodeFunction/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "5f9bc9d14a035378fec751a22d93371d4086d49df1c50f778ffd3e65282b98f0.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "IamRolesEncodeRole27839FDD",
                            "Arn"
                          ]
                        },
                        "description": "Creates a MediaConvert encode job",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                            "ErrorHandler": {
                              "Fn::GetAtt": [
                                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                                "Arn"
                              ]
                            },
                            "MediaConvertRole": {
                              "Fn::GetAtt": [
                                "IamRolesMediaConvertRoleDBD25335",
                                "Arn"
                              ]
                            },
                            "EndPoint": {
                              "Fn::GetAtt": [
                                "CustomResourcesMediaConvertEndPoint493A1B4F",
                                "EndpointUrl"
                              ]
                            }
                          }
                        },
                        "functionName": "dev-jingood2-vod-EncodeLambdaFunction",
                        "handler": "index.handler",
                        "layers": [
                          {
                            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
                          }
                        ],
                        "runtime": "nodejs12.x",
                        "timeout": 120
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.Function",
                  "version": "1.121.0"
                }
              },
              "InputValidateFunction": {
                "id": "InputValidateFunction",
                "path": "jingood2-vod/LambdaFunctions/InputValidateFunction",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/InputValidateFunction/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/InputValidateFunction/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/InputValidateFunction/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/InputValidateFunction/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/InputValidateFunction/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "7e6bba41fc0e85760597571b06a1eaea839e842eaf4d774e8cdabf4f4d21554e.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "IamRolesInputValidateRoleE2145049",
                            "Arn"
                          ]
                        },
                        "description": "Validates the input given to the workflow",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                            "ErrorHandler": {
                              "Fn::GetAtt": [
                                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                                "Arn"
                              ]
                            },
                            "WorkflowName": "dev-jingood2-vod",
                            "FrameCapture": "true",
                            "ArchiveSource": "DISABLED",
                            "EnableMediaPackage": "true",
                            "InputRotate": "DEGREE_0",
                            "EnableSns": "true",
                            "EnableSqs": "true",
                            "AcceleratedTranscoding": "PREFERRED",
                            "Source": {
                              "Ref": "S3BucketsSourceBucket4A23DAD8"
                            },
                            "Destination": {
                              "Ref": "S3BucketsDestinationBucketD831CA48"
                            },
                            "CloudFront": {
                              "Fn::GetAtt": [
                                "CloudFrontsCloudFrontDistribution221CB5B5",
                                "DomainName"
                              ]
                            },
                            "MediaConvert_Template_2160p": "dev-jingood2-vod_Ott_2160p_Avc_Aac_16x9_qvbr_no_preset",
                            "MediaConvert_Template_1080p": "dev-jingood2-vod_Ott_1080p_Avc_Aac_16x9_qvbr_no_preset",
                            "MediaConvert_Template_720p": "dev-jingood2-vod_Ott_720p_Avc_Aac_16x9_qvbr_no_preset"
                          }
                        },
                        "functionName": "dev-jingood2-vod-InputValidateLambdaFunction",
                        "handler": "index.handler",
                        "layers": [
                          {
                            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
                          }
                        ],
                        "runtime": "nodejs12.x",
                        "timeout": 120
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.Function",
                  "version": "1.121.0"
                }
              },
              "MediaInfoFunction": {
                "id": "MediaInfoFunction",
                "path": "jingood2-vod/LambdaFunctions/MediaInfoFunction",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/MediaInfoFunction/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/MediaInfoFunction/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/MediaInfoFunction/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/MediaInfoFunction/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/MediaInfoFunction/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "934423e0677a1e779035a084157154eac88a8bb31941f5e741ab488610a0af4b.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "IamRolesMediaInfoRole0F5707D7",
                            "Arn"
                          ]
                        },
                        "description": "Runs MediaInfo on a pre-signed S3 URL",
                        "environment": {
                          "variables": {
                            "ErrorHandler": {
                              "Fn::GetAtt": [
                                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "functionName": "dev-jingood2-vod-MediaInfoLambdaFunction",
                        "handler": "lambda_function.lambda_handler",
                        "runtime": "python3.7",
                        "timeout": 120
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.Function",
                  "version": "1.121.0"
                }
              },
              "MediaPackageAssetsFunction": {
                "id": "MediaPackageAssetsFunction",
                "path": "jingood2-vod/LambdaFunctions/MediaPackageAssetsFunction",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/MediaPackageAssetsFunction/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/MediaPackageAssetsFunction/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/MediaPackageAssetsFunction/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/MediaPackageAssetsFunction/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/MediaPackageAssetsFunction/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "40f4718f543491c6d722dfd855a4097cfd06ff787725003d3a1c84acb72a09db.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "IamRolesMediaPackageAssetsRoleF5840CEC",
                            "Arn"
                          ]
                        },
                        "description": "Ingests an asset into MediaPackage-VOD",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                            "ErrorHandler": {
                              "Fn::GetAtt": [
                                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                                "Arn"
                              ]
                            },
                            "MediaPackageVodRole": {
                              "Fn::GetAtt": [
                                "IamRolesMediaPackageVodRole2F296B82",
                                "Arn"
                              ]
                            },
                            "GroupId": {
                              "Fn::GetAtt": [
                                "CustomResourcesMediaPackageVod7F090D8D",
                                "GroupId"
                              ]
                            },
                            "GroupDomainName": {
                              "Fn::GetAtt": [
                                "CustomResourcesMediaPackageVod7F090D8D",
                                "GroupDomainName"
                              ]
                            }
                          }
                        },
                        "functionName": "dev-jingood2-vod-MediaPackageAssetsLambdaFunction",
                        "handler": "index.handler",
                        "layers": [
                          {
                            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
                          }
                        ],
                        "runtime": "nodejs12.x",
                        "timeout": 300
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.Function",
                  "version": "1.121.0"
                }
              },
              "OutputValidateFunction": {
                "id": "OutputValidateFunction",
                "path": "jingood2-vod/LambdaFunctions/OutputValidateFunction",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/OutputValidateFunction/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/OutputValidateFunction/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/OutputValidateFunction/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/OutputValidateFunction/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/OutputValidateFunction/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "2a217864cba285b8b63d640a3f980db4cac689dcf45f22d0f01f80cfba3aef85.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "IamRolesOutputValidateRole4E438CA5",
                            "Arn"
                          ]
                        },
                        "description": "Parses MediaConvert job output",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                            "DynamoDBTable": "dev-jingood2-vod-VideoInfo",
                            "ErrorHandler": {
                              "Fn::GetAtt": [
                                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                                "Arn"
                              ]
                            },
                            "EndPoint": {
                              "Fn::GetAtt": [
                                "CustomResourcesMediaConvertEndPoint493A1B4F",
                                "EndpointUrl"
                              ]
                            }
                          }
                        },
                        "functionName": "dev-jingood2-vod-OutputValidateLambdaFunction",
                        "handler": "index.handler",
                        "layers": [
                          {
                            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
                          }
                        ],
                        "runtime": "nodejs12.x",
                        "timeout": 120
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.Function",
                  "version": "1.121.0"
                }
              },
              "ProfilerFunction": {
                "id": "ProfilerFunction",
                "path": "jingood2-vod/LambdaFunctions/ProfilerFunction",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/ProfilerFunction/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/ProfilerFunction/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/ProfilerFunction/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/ProfilerFunction/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/ProfilerFunction/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "dccb332518a9e27ce5e5beedac0cf2529fd65d9e27c56bf3affa604685b17305.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "IamRolesProfilerRoleFD0F0438",
                            "Arn"
                          ]
                        },
                        "description": "Sets an EncodeProfile based on mediainfo output",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                            "DynamoDBTable": "dev-jingood2-vod-VideoInfo",
                            "ErrorHandler": {
                              "Fn::GetAtt": [
                                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "functionName": "dev-jingood2-vod-ProfilerLambdaFunction",
                        "handler": "index.handler",
                        "layers": [
                          {
                            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
                          }
                        ],
                        "runtime": "nodejs12.x",
                        "timeout": 120
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.Function",
                  "version": "1.121.0"
                }
              },
              "SnsNotificationFunction": {
                "id": "SnsNotificationFunction",
                "path": "jingood2-vod/LambdaFunctions/SnsNotificationFunction",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/SnsNotificationFunction/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/SnsNotificationFunction/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/SnsNotificationFunction/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/SnsNotificationFunction/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/SnsNotificationFunction/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "7a2eaded2dea13e4bdfadc33215c9cc0f6f74f52c04bf9b345751917b5324204.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "IamRolesSnsNotificationRoleF9DACA4C",
                            "Arn"
                          ]
                        },
                        "description": "Sends a notification when the encode job is completed",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                            "ErrorHandler": {
                              "Fn::GetAtt": [
                                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                                "Arn"
                              ]
                            },
                            "SnsTopic": {
                              "Ref": "SnsTopicsNotificationsDE98E041"
                            }
                          }
                        },
                        "functionName": "dev-jingood2-vod-SnsNotificationLambdaFunction",
                        "handler": "index.handler",
                        "layers": [
                          {
                            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
                          }
                        ],
                        "runtime": "nodejs12.x",
                        "timeout": 120
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.Function",
                  "version": "1.121.0"
                }
              },
              "SqsSendMessageFunction": {
                "id": "SqsSendMessageFunction",
                "path": "jingood2-vod/LambdaFunctions/SqsSendMessageFunction",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/SqsSendMessageFunction/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/SqsSendMessageFunction/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/SqsSendMessageFunction/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/SqsSendMessageFunction/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/SqsSendMessageFunction/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "9784495746df7225d07afef0bee4df2d609336a959ee2f9c2821709475d00a08.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "IamRolesSqsSendMessageRole6951B35A",
                            "Arn"
                          ]
                        },
                        "description": "Publish the workflow results to an SQS queue",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                            "ErrorHandler": {
                              "Fn::GetAtt": [
                                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                                "Arn"
                              ]
                            },
                            "SqsQueue": {
                              "Ref": "SqsQueuesMainSqsQueue3DF56461"
                            }
                          }
                        },
                        "functionName": "dev-jingood2-vod-SqsSendMessageLambdaFunction",
                        "handler": "index.handler",
                        "layers": [
                          {
                            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
                          }
                        ],
                        "runtime": "nodejs12.x",
                        "timeout": 120
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.Function",
                  "version": "1.121.0"
                }
              },
              "StepFunctionsFunction": {
                "id": "StepFunctionsFunction",
                "path": "jingood2-vod/LambdaFunctions/StepFunctionsFunction",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "jingood2-vod/LambdaFunctions/StepFunctionsFunction/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "jingood2-vod/LambdaFunctions/StepFunctionsFunction/Code/Stage",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.AssetStaging",
                          "version": "1.121.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "jingood2-vod/LambdaFunctions/StepFunctionsFunction/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "jingood2-vod/LambdaFunctions/StepFunctionsFunction/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "@aws-cdk/core.Construct",
                              "version": "1.121.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.BucketBase",
                          "version": "1.121.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3-assets.Asset",
                      "version": "1.121.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/LambdaFunctions/StepFunctionsFunction/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "a56595d6117035de0d67b693407ee03724c4ad1dc10de1a6c8098ece3b425c4c.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "IamRolesStepFunctionsRoleFD05369B",
                            "Arn"
                          ]
                        },
                        "description": "Creates a unique identifier (GUID) and executes the Ingest StateMachine",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                            "IngestWorkflow": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":states:",
                                  {
                                    "Ref": "AWS::Region"
                                  },
                                  ":",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":stateMachine:dev-jingood2-vod-IngestWorkflowStateMachine"
                                ]
                              ]
                            },
                            "ProcessWorkflow": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":states:",
                                  {
                                    "Ref": "AWS::Region"
                                  },
                                  ":",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":stateMachine:dev-jingood2-vod-ProcessWorkflowStateMachine"
                                ]
                              ]
                            },
                            "PublishWorkflow": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":states:",
                                  {
                                    "Ref": "AWS::Region"
                                  },
                                  ":",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":stateMachine:dev-jingood2-vod-PublishWorkflowStateMachine"
                                ]
                              ]
                            },
                            "ErrorHandler": {
                              "Fn::GetAtt": [
                                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "functionName": "dev-jingood2-vod-StepFunctionsLambdaFunction",
                        "handler": "index.handler",
                        "layers": [
                          {
                            "Ref": "LambdaFunctionsLambdaLayerB84EA8CB"
                          }
                        ],
                        "runtime": "nodejs12.x"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                      "version": "1.121.0"
                    }
                  },
                  "S3LambdaInvokeVideo": {
                    "id": "S3LambdaInvokeVideo",
                    "path": "jingood2-vod/LambdaFunctions/StepFunctionsFunction/S3LambdaInvokeVideo",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Fn::GetAtt": [
                            "LambdaFunctionsStepFunctionsFunctionD2E87E65",
                            "Arn"
                          ]
                        },
                        "principal": "s3.amazonaws.com",
                        "sourceAccount": {
                          "Ref": "AWS::AccountId"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnPermission",
                      "version": "1.121.0"
                    }
                  },
                  "CloudWatchLambdaInvokeComplete": {
                    "id": "CloudWatchLambdaInvokeComplete",
                    "path": "jingood2-vod/LambdaFunctions/StepFunctionsFunction/CloudWatchLambdaInvokeComplete",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Fn::GetAtt": [
                            "LambdaFunctionsStepFunctionsFunctionD2E87E65",
                            "Arn"
                          ]
                        },
                        "principal": "events.amazonaws.com"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnPermission",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.Function",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "Rules": {
            "id": "Rules",
            "path": "jingood2-vod/Rules",
            "children": {
              "EncodeCompleteRule": {
                "id": "EncodeCompleteRule",
                "path": "jingood2-vod/Rules/EncodeCompleteRule",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/Rules/EncodeCompleteRule/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                      "aws:cdk:cloudformation:props": {
                        "description": "MediaConvert Completed event rule",
                        "eventPattern": {
                          "source": [
                            "aws.mediaconvert"
                          ],
                          "detail": {
                            "status": [
                              "COMPLETE"
                            ]
                          }
                        },
                        "name": "dev-jingood2-vod-EncodeCompleteRule",
                        "state": "ENABLED",
                        "targets": [
                          {
                            "id": "Target0",
                            "arn": {
                              "Fn::GetAtt": [
                                "LambdaFunctionsStepFunctionsFunctionD2E87E65",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-events.CfnRule",
                      "version": "1.121.0"
                    }
                  },
                  "AllowEventRulejingood2vodLambdaFunctionsStepFunctionsFunction4E5F3FE5": {
                    "id": "AllowEventRulejingood2vodLambdaFunctionsStepFunctionsFunction4E5F3FE5",
                    "path": "jingood2-vod/Rules/EncodeCompleteRule/AllowEventRulejingood2vodLambdaFunctionsStepFunctionsFunction4E5F3FE5",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Fn::GetAtt": [
                            "LambdaFunctionsStepFunctionsFunctionD2E87E65",
                            "Arn"
                          ]
                        },
                        "principal": "events.amazonaws.com",
                        "sourceArn": {
                          "Fn::GetAtt": [
                            "RulesEncodeCompleteRuleE90C2521",
                            "Arn"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnPermission",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-events.Rule",
                  "version": "1.121.0"
                }
              },
              "EncodeErrorRule": {
                "id": "EncodeErrorRule",
                "path": "jingood2-vod/Rules/EncodeErrorRule",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/Rules/EncodeErrorRule/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                      "aws:cdk:cloudformation:props": {
                        "description": "MediaConvert Error event rule",
                        "eventPattern": {
                          "source": [
                            "aws.mediaconvert"
                          ],
                          "detail": {
                            "status": [
                              "ERROR"
                            ]
                          }
                        },
                        "name": "dev-jingood2-vod-EncodeErrorRule",
                        "state": "ENABLED",
                        "targets": [
                          {
                            "id": "Target0",
                            "arn": {
                              "Fn::GetAtt": [
                                "LambdaFunctionsErrorHandlerFunctionB60769DD",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-events.CfnRule",
                      "version": "1.121.0"
                    }
                  },
                  "AllowEventRulejingood2vodLambdaFunctionsErrorHandlerFunction5D576805": {
                    "id": "AllowEventRulejingood2vodLambdaFunctionsErrorHandlerFunction5D576805",
                    "path": "jingood2-vod/Rules/EncodeErrorRule/AllowEventRulejingood2vodLambdaFunctionsErrorHandlerFunction5D576805",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Fn::GetAtt": [
                            "LambdaFunctionsErrorHandlerFunctionB60769DD",
                            "Arn"
                          ]
                        },
                        "principal": "events.amazonaws.com",
                        "sourceArn": {
                          "Fn::GetAtt": [
                            "RulesEncodeErrorRule7A73B3FA",
                            "Arn"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnPermission",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-events.Rule",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "CustomResources": {
            "id": "CustomResources",
            "path": "jingood2-vod/CustomResources",
            "children": {
              "UUID": {
                "id": "UUID",
                "path": "jingood2-vod/CustomResources/UUID",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "jingood2-vod/CustomResources/UUID/Default",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnResource",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CustomResource",
                  "version": "1.121.0"
                }
              },
              "AnonymousMetrics": {
                "id": "AnonymousMetrics",
                "path": "jingood2-vod/CustomResources/AnonymousMetrics",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "jingood2-vod/CustomResources/AnonymousMetrics/Default",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnResource",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CustomResource",
                  "version": "1.121.0"
                }
              },
              "MediaConvertEndPoint": {
                "id": "MediaConvertEndPoint",
                "path": "jingood2-vod/CustomResources/MediaConvertEndPoint",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "jingood2-vod/CustomResources/MediaConvertEndPoint/Default",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnResource",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CustomResource",
                  "version": "1.121.0"
                }
              },
              "MediaConvertTemplates": {
                "id": "MediaConvertTemplates",
                "path": "jingood2-vod/CustomResources/MediaConvertTemplates",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "jingood2-vod/CustomResources/MediaConvertTemplates/Default",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnResource",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CustomResource",
                  "version": "1.121.0"
                }
              },
              "MediaPackageVod": {
                "id": "MediaPackageVod",
                "path": "jingood2-vod/CustomResources/MediaPackageVod",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "jingood2-vod/CustomResources/MediaPackageVod/Default",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnResource",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CustomResource",
                  "version": "1.121.0"
                }
              },
              "S3Config": {
                "id": "S3Config",
                "path": "jingood2-vod/CustomResources/S3Config",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "jingood2-vod/CustomResources/S3Config/Default",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnResource",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CustomResource",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "Outputs": {
            "id": "Outputs",
            "path": "jingood2-vod/Outputs",
            "children": {
              "CloudFrontOutput": {
                "id": "CloudFrontOutput",
                "path": "jingood2-vod/Outputs/CloudFrontOutput",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnOutput",
                  "version": "1.121.0"
                }
              },
              "DestinationBucketOutput": {
                "id": "DestinationBucketOutput",
                "path": "jingood2-vod/Outputs/DestinationBucketOutput",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnOutput",
                  "version": "1.121.0"
                }
              },
              "DynamoDbTableOutput": {
                "id": "DynamoDbTableOutput",
                "path": "jingood2-vod/Outputs/DynamoDbTableOutput",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnOutput",
                  "version": "1.121.0"
                }
              },
              "SourceBucketOutput": {
                "id": "SourceBucketOutput",
                "path": "jingood2-vod/Outputs/SourceBucketOutput",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnOutput",
                  "version": "1.121.0"
                }
              },
              "SnsTopicOutput": {
                "id": "SnsTopicOutput",
                "path": "jingood2-vod/Outputs/SnsTopicOutput",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnOutput",
                  "version": "1.121.0"
                }
              },
              "SqsQueueArnOutput": {
                "id": "SqsQueueArnOutput",
                "path": "jingood2-vod/Outputs/SqsQueueArnOutput",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnOutput",
                  "version": "1.121.0"
                }
              },
              "SqsQueueUrlOutput": {
                "id": "SqsQueueUrlOutput",
                "path": "jingood2-vod/Outputs/SqsQueueUrlOutput",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnOutput",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "StepFunctionsChoices": {
            "id": "StepFunctionsChoices",
            "path": "jingood2-vod/StepFunctionsChoices",
            "children": {
              "IngestWorkflowSnsChoice": {
                "id": "IngestWorkflowSnsChoice",
                "path": "jingood2-vod/StepFunctionsChoices/IngestWorkflowSnsChoice",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Choice",
                  "version": "1.121.0"
                }
              },
              "ProcessWorkflowAcceleratedTranscodingCheckChoice": {
                "id": "ProcessWorkflowAcceleratedTranscodingCheckChoice",
                "path": "jingood2-vod/StepFunctionsChoices/ProcessWorkflowAcceleratedTranscodingCheckChoice",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Choice",
                  "version": "1.121.0"
                }
              },
              "ProcessWorkflowEncodingProfileCheckChoice": {
                "id": "ProcessWorkflowEncodingProfileCheckChoice",
                "path": "jingood2-vod/StepFunctionsChoices/ProcessWorkflowEncodingProfileCheckChoice",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Choice",
                  "version": "1.121.0"
                }
              },
              "ProcessWorkflowFrameCaptureCheckChoice": {
                "id": "ProcessWorkflowFrameCaptureCheckChoice",
                "path": "jingood2-vod/StepFunctionsChoices/ProcessWorkflowFrameCaptureCheckChoice",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Choice",
                  "version": "1.121.0"
                }
              },
              "PublishWorkflowArchiveSourceChoice": {
                "id": "PublishWorkflowArchiveSourceChoice",
                "path": "jingood2-vod/StepFunctionsChoices/PublishWorkflowArchiveSourceChoice",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Choice",
                  "version": "1.121.0"
                }
              },
              "PublishWorkflowMediaPackageChoice": {
                "id": "PublishWorkflowMediaPackageChoice",
                "path": "jingood2-vod/StepFunctionsChoices/PublishWorkflowMediaPackageChoice",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Choice",
                  "version": "1.121.0"
                }
              },
              "PublishWorkflowSnsChoice": {
                "id": "PublishWorkflowSnsChoice",
                "path": "jingood2-vod/StepFunctionsChoices/PublishWorkflowSnsChoice",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Choice",
                  "version": "1.121.0"
                }
              },
              "PublishWorkflowSqsChoice": {
                "id": "PublishWorkflowSqsChoice",
                "path": "jingood2-vod/StepFunctionsChoices/PublishWorkflowSqsChoice",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Choice",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "StepFunctionsPasses": {
            "id": "StepFunctionsPasses",
            "path": "jingood2-vod/StepFunctionsPasses",
            "children": {
              "ProcessWorkflowAcceleratedTranscodingDisabledPass": {
                "id": "ProcessWorkflowAcceleratedTranscodingDisabledPass",
                "path": "jingood2-vod/StepFunctionsPasses/ProcessWorkflowAcceleratedTranscodingDisabledPass",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Pass",
                  "version": "1.121.0"
                }
              },
              "processWorkflowAcceleratedTranscodingEnabledPass": {
                "id": "processWorkflowAcceleratedTranscodingEnabledPass",
                "path": "jingood2-vod/StepFunctionsPasses/processWorkflowAcceleratedTranscodingEnabledPass",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Pass",
                  "version": "1.121.0"
                }
              },
              "processWorkflowAcceleratedTranscodingPreferredPass": {
                "id": "processWorkflowAcceleratedTranscodingPreferredPass",
                "path": "jingood2-vod/StepFunctionsPasses/processWorkflowAcceleratedTranscodingPreferredPass",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Pass",
                  "version": "1.121.0"
                }
              },
              "ProcessWorkflowCustomJobTemplatePass": {
                "id": "ProcessWorkflowCustomJobTemplatePass",
                "path": "jingood2-vod/StepFunctionsPasses/ProcessWorkflowCustomJobTemplatePass",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Pass",
                  "version": "1.121.0"
                }
              },
              "ProcessWorkflowFrameCaptureOffPass": {
                "id": "ProcessWorkflowFrameCaptureOffPass",
                "path": "jingood2-vod/StepFunctionsPasses/ProcessWorkflowFrameCaptureOffPass",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Pass",
                  "version": "1.121.0"
                }
              },
              "ProcessWorkflowFrameCaptureOnPass": {
                "id": "ProcessWorkflowFrameCaptureOnPass",
                "path": "jingood2-vod/StepFunctionsPasses/ProcessWorkflowFrameCaptureOnPass",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Pass",
                  "version": "1.121.0"
                }
              },
              "ProcessWorkflowJobTemplate1080pPass": {
                "id": "ProcessWorkflowJobTemplate1080pPass",
                "path": "jingood2-vod/StepFunctionsPasses/ProcessWorkflowJobTemplate1080pPass",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Pass",
                  "version": "1.121.0"
                }
              },
              "ProcessWorkflowJobTemplate2160pPass": {
                "id": "ProcessWorkflowJobTemplate2160pPass",
                "path": "jingood2-vod/StepFunctionsPasses/ProcessWorkflowJobTemplate2160pPass",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Pass",
                  "version": "1.121.0"
                }
              },
              "ProcessWorkflowJobTemplate720pPass": {
                "id": "ProcessWorkflowJobTemplate720pPass",
                "path": "jingood2-vod/StepFunctionsPasses/ProcessWorkflowJobTemplate720pPass",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Pass",
                  "version": "1.121.0"
                }
              },
              "PublishWorkflowCompletePass": {
                "id": "PublishWorkflowCompletePass",
                "path": "jingood2-vod/StepFunctionsPasses/PublishWorkflowCompletePass",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.Pass",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "StepFunctionsTasks": {
            "id": "StepFunctionsTasks",
            "path": "jingood2-vod/StepFunctionsTasks",
            "children": {
              "IngestWorkflowInputValidateTask": {
                "id": "IngestWorkflowInputValidateTask",
                "path": "jingood2-vod/StepFunctionsTasks/IngestWorkflowInputValidateTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "IngestWorkflowMediaInfoTask": {
                "id": "IngestWorkflowMediaInfoTask",
                "path": "jingood2-vod/StepFunctionsTasks/IngestWorkflowMediaInfoTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "IngestWorkflowDynamoDbUpdateTask": {
                "id": "IngestWorkflowDynamoDbUpdateTask",
                "path": "jingood2-vod/StepFunctionsTasks/IngestWorkflowDynamoDbUpdateTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "IngestWorkflowSnsNotificationsTask": {
                "id": "IngestWorkflowSnsNotificationsTask",
                "path": "jingood2-vod/StepFunctionsTasks/IngestWorkflowSnsNotificationsTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "IngestWorkflowProcessExecuteTask": {
                "id": "IngestWorkflowProcessExecuteTask",
                "path": "jingood2-vod/StepFunctionsTasks/IngestWorkflowProcessExecuteTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "ProcessWorkflowDynamoDbUpdateTask": {
                "id": "ProcessWorkflowDynamoDbUpdateTask",
                "path": "jingood2-vod/StepFunctionsTasks/ProcessWorkflowDynamoDbUpdateTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "ProcessWorkflowEncodeJobSubmitTask": {
                "id": "ProcessWorkflowEncodeJobSubmitTask",
                "path": "jingood2-vod/StepFunctionsTasks/ProcessWorkflowEncodeJobSubmitTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "ProcessWorkflowProfilerTask": {
                "id": "ProcessWorkflowProfilerTask",
                "path": "jingood2-vod/StepFunctionsTasks/ProcessWorkflowProfilerTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "PublishWorkflowArchiveTask": {
                "id": "PublishWorkflowArchiveTask",
                "path": "jingood2-vod/StepFunctionsTasks/PublishWorkflowArchiveTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "PublishWorkflowDeepArchiveTask": {
                "id": "PublishWorkflowDeepArchiveTask",
                "path": "jingood2-vod/StepFunctionsTasks/PublishWorkflowDeepArchiveTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "PublishWorkflowDynamoDbUpdateTask": {
                "id": "PublishWorkflowDynamoDbUpdateTask",
                "path": "jingood2-vod/StepFunctionsTasks/PublishWorkflowDynamoDbUpdateTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "PublishWorkflowMediaPackageAssetsTask": {
                "id": "PublishWorkflowMediaPackageAssetsTask",
                "path": "jingood2-vod/StepFunctionsTasks/PublishWorkflowMediaPackageAssetsTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "PublishWorkflowSnsNotificationTask": {
                "id": "PublishWorkflowSnsNotificationTask",
                "path": "jingood2-vod/StepFunctionsTasks/PublishWorkflowSnsNotificationTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "PublishWorkflowSqsSendMessageTask": {
                "id": "PublishWorkflowSqsSendMessageTask",
                "path": "jingood2-vod/StepFunctionsTasks/PublishWorkflowSqsSendMessageTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              },
              "PublishWorkflowValidateEncodingOutputTask": {
                "id": "PublishWorkflowValidateEncodingOutputTask",
                "path": "jingood2-vod/StepFunctionsTasks/PublishWorkflowValidateEncodingOutputTask",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "StepFunctions": {
            "id": "StepFunctions",
            "path": "jingood2-vod/StepFunctions",
            "children": {
              "IngestWorkflowStateMachine": {
                "id": "IngestWorkflowStateMachine",
                "path": "jingood2-vod/StepFunctions/IngestWorkflowStateMachine",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/StepFunctions/IngestWorkflowStateMachine/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::StepFunctions::StateMachine",
                      "aws:cdk:cloudformation:props": {
                        "roleArn": {
                          "Fn::GetAtt": [
                            "IamRolesStepFunctionsServiceRoleCBE4EE63",
                            "Arn"
                          ]
                        },
                        "definitionString": {
                          "Fn::Join": [
                            "",
                            [
                              "{\"StartAt\":\"IngestWorkflowInputValidateTask\",\"States\":{\"IngestWorkflowInputValidateTask\":{\"Next\":\"IngestWorkflowMediaInfoTask\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsInputValidateFunction159C59A4",
                                  "Arn"
                                ]
                              },
                              "\"},\"IngestWorkflowMediaInfoTask\":{\"Next\":\"IngestWorkflowDynamoDbUpdateTask\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsMediaInfoFunctionE4E12675",
                                  "Arn"
                                ]
                              },
                              "\"},\"IngestWorkflowDynamoDbUpdateTask\":{\"Next\":\"IngestWorkflowSnsChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsDynamoDbUpdateFunction975864E9",
                                  "Arn"
                                ]
                              },
                              "\"},\"IngestWorkflowSnsChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.enableSns\",\"BooleanEquals\":true,\"Next\":\"IngestWorkflowSnsNotificationsTask\"}],\"Default\":\"IngestWorkflowProcessExecuteTask\"},\"IngestWorkflowProcessExecuteTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsStepFunctionsFunctionD2E87E65",
                                  "Arn"
                                ]
                              },
                              "\"},\"IngestWorkflowSnsNotificationsTask\":{\"Next\":\"IngestWorkflowProcessExecuteTask\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsSnsNotificationFunction2FFA56AD",
                                  "Arn"
                                ]
                              },
                              "\"}}}"
                            ]
                          ]
                        },
                        "stateMachineName": "dev-jingood2-vod-IngestWorkflowStateMachine"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-stepfunctions.CfnStateMachine",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.StateMachine",
                  "version": "1.121.0"
                }
              },
              "ProcessWorkflowStateMachine": {
                "id": "ProcessWorkflowStateMachine",
                "path": "jingood2-vod/StepFunctions/ProcessWorkflowStateMachine",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/StepFunctions/ProcessWorkflowStateMachine/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::StepFunctions::StateMachine",
                      "aws:cdk:cloudformation:props": {
                        "roleArn": {
                          "Fn::GetAtt": [
                            "IamRolesStepFunctionsServiceRoleCBE4EE63",
                            "Arn"
                          ]
                        },
                        "definitionString": {
                          "Fn::Join": [
                            "",
                            [
                              "{\"StartAt\":\"ProcessWorkflowProfilerTask\",\"States\":{\"ProcessWorkflowProfilerTask\":{\"Next\":\"ProcessWorkflowEncodingProfileCheckChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsProfilerFunction09767EC6",
                                  "Arn"
                                ]
                              },
                              "\"},\"ProcessWorkflowEncodingProfileCheckChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.isCustomTemplate\",\"BooleanEquals\":true,\"Next\":\"ProcessWorkflowCustomJobTemplatePass\"},{\"Variable\":\"$.encodingProfile\",\"NumericEquals\":2160,\"Next\":\"ProcessWorkflowJobTemplate2160pPass\"},{\"Variable\":\"$.encodingProfile\",\"NumericEquals\":1080,\"Next\":\"ProcessWorkflowJobTemplate1080pPass\"},{\"Variable\":\"$.encodingProfile\",\"NumericEquals\":720,\"Next\":\"ProcessWorkflowJobTemplate720pPass\"}]},\"ProcessWorkflowCustomJobTemplatePass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowAcceleratedTranscodingCheckChoice\"},\"ProcessWorkflowAcceleratedTranscodingCheckChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.acceleratedTranscoding\",\"StringEquals\":\"ENABLED\",\"Next\":\"processWorkflowAcceleratedTranscodingEnabledPass\"},{\"Variable\":\"$.acceleratedTranscoding\",\"StringEquals\":\"PREFERRED\",\"Next\":\"processWorkflowAcceleratedTranscodingPreferredPass\"},{\"Variable\":\"$.acceleratedTranscoding\",\"StringEquals\":\"DISABLED\",\"Next\":\"ProcessWorkflowAcceleratedTranscodingDisabledPass\"}]},\"ProcessWorkflowJobTemplate2160pPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowAcceleratedTranscodingCheckChoice\"},\"ProcessWorkflowJobTemplate1080pPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowAcceleratedTranscodingCheckChoice\"},\"ProcessWorkflowJobTemplate720pPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowAcceleratedTranscodingCheckChoice\"},\"processWorkflowAcceleratedTranscodingEnabledPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowFrameCaptureCheckChoice\"},\"ProcessWorkflowFrameCaptureCheckChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.frameCapture\",\"BooleanEquals\":true,\"Next\":\"ProcessWorkflowFrameCaptureOnPass\"}],\"Default\":\"ProcessWorkflowFrameCaptureOffPass\"},\"processWorkflowAcceleratedTranscodingPreferredPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowFrameCaptureCheckChoice\"},\"ProcessWorkflowAcceleratedTranscodingDisabledPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowFrameCaptureCheckChoice\"},\"ProcessWorkflowFrameCaptureOffPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowEncodeJobSubmitTask\"},\"ProcessWorkflowEncodeJobSubmitTask\":{\"Next\":\"ProcessWorkflowDynamoDbUpdateTask\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsEncodeFunctionF8E9C07D",
                                  "Arn"
                                ]
                              },
                              "\"},\"ProcessWorkflowFrameCaptureOnPass\":{\"Type\":\"Pass\",\"Next\":\"ProcessWorkflowEncodeJobSubmitTask\"},\"ProcessWorkflowDynamoDbUpdateTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsDynamoDbUpdateFunction975864E9",
                                  "Arn"
                                ]
                              },
                              "\"}}}"
                            ]
                          ]
                        },
                        "stateMachineName": "dev-jingood2-vod-ProcessWorkflowStateMachine"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-stepfunctions.CfnStateMachine",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.StateMachine",
                  "version": "1.121.0"
                }
              },
              "PublishWorkflowStateMachine": {
                "id": "PublishWorkflowStateMachine",
                "path": "jingood2-vod/StepFunctions/PublishWorkflowStateMachine",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "jingood2-vod/StepFunctions/PublishWorkflowStateMachine/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::StepFunctions::StateMachine",
                      "aws:cdk:cloudformation:props": {
                        "roleArn": {
                          "Fn::GetAtt": [
                            "IamRolesStepFunctionsServiceRoleCBE4EE63",
                            "Arn"
                          ]
                        },
                        "definitionString": {
                          "Fn::Join": [
                            "",
                            [
                              "{\"StartAt\":\"PublishWorkflowValidateEncodingOutputTask\",\"States\":{\"PublishWorkflowValidateEncodingOutputTask\":{\"Next\":\"PublishWorkflowArchiveSourceChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsOutputValidateFunction38F12556",
                                  "Arn"
                                ]
                              },
                              "\"},\"PublishWorkflowArchiveSourceChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.archiveSource\",\"StringEquals\":\"GLACIER\",\"Next\":\"PublishWorkflowArchiveTask\"},{\"Variable\":\"$.archiveSource\",\"StringEquals\":\"DEEP_ARCHIVE\",\"Next\":\"PublishWorkflowDeepArchiveTask\"}],\"Default\":\"PublishWorkflowMediaPackageChoice\"},\"PublishWorkflowMediaPackageChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.enableMediaPackage\",\"BooleanEquals\":true,\"Next\":\"PublishWorkflowMediaPackageAssetsTask\"}],\"Default\":\"PublishWorkflowDynamoDbUpdateTask\"},\"PublishWorkflowArchiveTask\":{\"Next\":\"PublishWorkflowMediaPackageChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsArchiveSourceFunctionC2D80DB5",
                                  "Arn"
                                ]
                              },
                              "\"},\"PublishWorkflowDeepArchiveTask\":{\"Next\":\"PublishWorkflowMediaPackageChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsArchiveSourceFunctionC2D80DB5",
                                  "Arn"
                                ]
                              },
                              "\"},\"PublishWorkflowDynamoDbUpdateTask\":{\"Next\":\"PublishWorkflowSqsChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsDynamoDbUpdateFunction975864E9",
                                  "Arn"
                                ]
                              },
                              "\"},\"PublishWorkflowMediaPackageAssetsTask\":{\"Next\":\"PublishWorkflowDynamoDbUpdateTask\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsMediaPackageAssetsFunctionBBCC2F3F",
                                  "Arn"
                                ]
                              },
                              "\"},\"PublishWorkflowSqsChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.enableSqs\",\"BooleanEquals\":true,\"Next\":\"PublishWorkflowSqsSendMessageTask\"}],\"Default\":\"PublishWorkflowSnsChoice\"},\"PublishWorkflowSnsChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.enableSns\",\"BooleanEquals\":true,\"Next\":\"PublishWorkflowSnsNotificationTask\"}],\"Default\":\"PublishWorkflowCompletePass\"},\"PublishWorkflowSqsSendMessageTask\":{\"Next\":\"PublishWorkflowSnsChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsSqsSendMessageFunction2C27587E",
                                  "Arn"
                                ]
                              },
                              "\"},\"PublishWorkflowCompletePass\":{\"Type\":\"Pass\",\"End\":true},\"PublishWorkflowSnsNotificationTask\":{\"Next\":\"PublishWorkflowCompletePass\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "LambdaFunctionsSnsNotificationFunction2FFA56AD",
                                  "Arn"
                                ]
                              },
                              "\"}}}"
                            ]
                          ]
                        },
                        "stateMachineName": "dev-jingood2-vod-PublishWorkflowStateMachine"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-stepfunctions.CfnStateMachine",
                      "version": "1.121.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-stepfunctions.StateMachine",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "jingood2-vod/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "jingood2-vod/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnResource",
                  "version": "1.121.0"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "jingood2-vod/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnCondition",
                  "version": "1.121.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.121.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "@aws-cdk/core.Stack",
          "version": "1.121.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "@aws-cdk/core.App",
      "version": "1.121.0"
    }
  }
}