"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Outputs = void 0;
const cdk = require("@aws-cdk/core");
class Outputs extends cdk.Construct {
    constructor(scope, id, props) {
        var _a;
        super(scope, id);
        this.cloudFront = new cdk.CfnOutput(this, 'CloudFrontOutput', {
            description: `${props.stackName} CloudFront Domain Name`,
            value: props.cloudFronts.distribution.domainName,
            exportName: `${props.stackName}-CloudFront`,
        });
        this.destinationBucket = new cdk.CfnOutput(this, 'DestinationBucketOutput', {
            description: `${props.stackName} Destination S3 Bucket`,
            value: props.s3Buckets.destination.bucketName,
            exportName: `${props.stackName}-DestinationBucket`,
        });
        this.dynamoDbTable = new cdk.CfnOutput(this, 'DynamoDbTableOutput', {
            description: `${props.stackName} DynamoDB Table`,
            value: (_a = props.dynamoDbTables.videoInfo.tableName) !== null && _a !== void 0 ? _a : '',
            exportName: `${props.stackName}-DynamoDbTable`,
        });
        this.sourceBucket = new cdk.CfnOutput(this, 'SourceBucketOutput', {
            description: `${props.stackName} Source S3 Bucket`,
            value: props.s3Buckets.source.bucketName,
            exportName: `${props.stackName}-SourceBucket`,
        });
        this.snsTopic = new cdk.CfnOutput(this, 'SnsTopicOutput', {
            description: `${props.stackName} SNS Notification Topic`,
            value: props.snsTopics.notifications.topicArn,
            exportName: `${props.stackName}-SnsTopic`,
        });
        this.sqsArn = new cdk.CfnOutput(this, 'SqsQueueArnOutput', {
            description: `${props.stackName} SQS Queue ARN`,
            value: props.sqsQueues.main.queueArn,
            exportName: `${props.stackName}-SqsQueueArn`,
        });
        this.sqsUrl = new cdk.CfnOutput(this, 'SqsQueueUrlOutput', {
            description: `${props.stackName} SQS Queue URL`,
            value: props.sqsQueues.main.queueUrl,
            exportName: `${props.stackName}-SqsQueueUrl`,
        });
    }
}
exports.Outputs = Outputs;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3V0cHV0cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm91dHB1dHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEscUNBQXFDO0FBa0JyQyxNQUFhLE9BQVEsU0FBUSxHQUFHLENBQUMsU0FBUztJQVV4QyxZQUFZLEtBQW9CLEVBQUUsRUFBVSxFQUFFLEtBQW1COztRQUMvRCxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRWpCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxrQkFBa0IsRUFBRTtZQUM1RCxXQUFXLEVBQUUsR0FBRyxLQUFLLENBQUMsU0FBUyx5QkFBeUI7WUFDeEQsS0FBSyxFQUFFLEtBQUssQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLFVBQVU7WUFDaEQsVUFBVSxFQUFFLEdBQUcsS0FBSyxDQUFDLFNBQVMsYUFBYTtTQUM1QyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSx5QkFBeUIsRUFBRTtZQUMxRSxXQUFXLEVBQUUsR0FBRyxLQUFLLENBQUMsU0FBUyx3QkFBd0I7WUFDdkQsS0FBSyxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLFVBQVU7WUFDN0MsVUFBVSxFQUFFLEdBQUcsS0FBSyxDQUFDLFNBQVMsb0JBQW9CO1NBQ25ELENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxxQkFBcUIsRUFBRTtZQUNsRSxXQUFXLEVBQUUsR0FBRyxLQUFLLENBQUMsU0FBUyxpQkFBaUI7WUFDaEQsS0FBSyxRQUFFLEtBQUssQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLFNBQVMsbUNBQUksRUFBRTtZQUNyRCxVQUFVLEVBQUUsR0FBRyxLQUFLLENBQUMsU0FBUyxnQkFBZ0I7U0FDL0MsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLEdBQUcsQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLG9CQUFvQixFQUFFO1lBQ2hFLFdBQVcsRUFBRSxHQUFHLEtBQUssQ0FBQyxTQUFTLG1CQUFtQjtZQUNsRCxLQUFLLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsVUFBVTtZQUN4QyxVQUFVLEVBQUUsR0FBRyxLQUFLLENBQUMsU0FBUyxlQUFlO1NBQzlDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxnQkFBZ0IsRUFBRTtZQUN4RCxXQUFXLEVBQUUsR0FBRyxLQUFLLENBQUMsU0FBUyx5QkFBeUI7WUFDeEQsS0FBSyxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLFFBQVE7WUFDN0MsVUFBVSxFQUFFLEdBQUcsS0FBSyxDQUFDLFNBQVMsV0FBVztTQUMxQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksR0FBRyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsbUJBQW1CLEVBQUU7WUFDekQsV0FBVyxFQUFFLEdBQUcsS0FBSyxDQUFDLFNBQVMsZ0JBQWdCO1lBQy9DLEtBQUssRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRO1lBQ3BDLFVBQVUsRUFBRSxHQUFHLEtBQUssQ0FBQyxTQUFTLGNBQWM7U0FDN0MsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLEdBQUcsQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLG1CQUFtQixFQUFFO1lBQ3pELFdBQVcsRUFBRSxHQUFHLEtBQUssQ0FBQyxTQUFTLGdCQUFnQjtZQUMvQyxLQUFLLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUTtZQUNwQyxVQUFVLEVBQUUsR0FBRyxLQUFLLENBQUMsU0FBUyxjQUFjO1NBQzdDLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQXZERCwwQkF1REMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjZGsgZnJvbSAnQGF3cy1jZGsvY29yZSc7XG5pbXBvcnQgeyBEeW5hbW9EYlRhYmxlcyB9IGZyb20gJy4vZHluYW1vZGItdGFibGVzJztcbmltcG9ydCB7IFMzQnVja2V0cyB9IGZyb20gJy4vczMtYnVja2V0cyc7XG5pbXBvcnQgeyBDbG91ZEZyb250cyB9IGZyb20gJy4vY2xvdWRmcm9udHMnO1xuaW1wb3J0IHsgQ3VzdG9tUmVzb3VyY2VzIH0gZnJvbSAnLi9jdXN0b20tcmVzb3VyY2VzJztcbmltcG9ydCB7IFNuc1RvcGljcyB9IGZyb20gJy4vc25zLXRvcGljcyc7XG5pbXBvcnQgeyBTcXNRdWV1ZXMgfSBmcm9tICcuL3Nxcy1xdWV1ZXMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIE91dHB1dHNQcm9wcyB7XG4gIGNsb3VkRnJvbnRzOiBDbG91ZEZyb250cztcbiAgY3VzdG9tUmVzb3VyY2VzOiBDdXN0b21SZXNvdXJjZXM7XG4gIGR5bmFtb0RiVGFibGVzOiBEeW5hbW9EYlRhYmxlcztcbiAgczNCdWNrZXRzOiBTM0J1Y2tldHM7XG4gIHNuc1RvcGljczogU25zVG9waWNzO1xuICBzcXNRdWV1ZXM6IFNxc1F1ZXVlcztcbiAgc3RhY2tOYW1lOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBPdXRwdXRzIGV4dGVuZHMgY2RrLkNvbnN0cnVjdCB7XG4gIHB1YmxpYyByZWFkb25seSBjbG91ZEZyb250OiBjZGsuQ2ZuT3V0cHV0O1xuICBwdWJsaWMgcmVhZG9ubHkgZGVzdGluYXRpb25CdWNrZXQ6IGNkay5DZm5PdXRwdXQ7XG4gIHB1YmxpYyByZWFkb25seSBkeW5hbW9EYlRhYmxlOiBjZGsuQ2ZuT3V0cHV0O1xuICBwdWJsaWMgcmVhZG9ubHkgc291cmNlQnVja2V0OiBjZGsuQ2ZuT3V0cHV0O1xuICBwdWJsaWMgcmVhZG9ubHkgc25zVG9waWM6IGNkay5DZm5PdXRwdXQ7XG4gIHB1YmxpYyByZWFkb25seSBzcXNBcm46IGNkay5DZm5PdXRwdXQ7XG4gIHB1YmxpYyByZWFkb25seSBzcXNVcmw6IGNkay5DZm5PdXRwdXQ7XG4gIHB1YmxpYyByZWFkb25seSB1dWlkOiBjZGsuQ2ZuT3V0cHV0O1xuXG4gIGNvbnN0cnVjdG9yKHNjb3BlOiBjZGsuQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogT3V0cHV0c1Byb3BzKSB7XG4gICAgc3VwZXIoc2NvcGUsIGlkKTtcblxuICAgIHRoaXMuY2xvdWRGcm9udCA9IG5ldyBjZGsuQ2ZuT3V0cHV0KHRoaXMsICdDbG91ZEZyb250T3V0cHV0Jywge1xuICAgICAgZGVzY3JpcHRpb246IGAke3Byb3BzLnN0YWNrTmFtZX0gQ2xvdWRGcm9udCBEb21haW4gTmFtZWAsXG4gICAgICB2YWx1ZTogcHJvcHMuY2xvdWRGcm9udHMuZGlzdHJpYnV0aW9uLmRvbWFpbk5hbWUsXG4gICAgICBleHBvcnROYW1lOiBgJHtwcm9wcy5zdGFja05hbWV9LUNsb3VkRnJvbnRgLFxuICAgIH0pO1xuXG4gICAgdGhpcy5kZXN0aW5hdGlvbkJ1Y2tldCA9IG5ldyBjZGsuQ2ZuT3V0cHV0KHRoaXMsICdEZXN0aW5hdGlvbkJ1Y2tldE91dHB1dCcsIHtcbiAgICAgIGRlc2NyaXB0aW9uOiBgJHtwcm9wcy5zdGFja05hbWV9IERlc3RpbmF0aW9uIFMzIEJ1Y2tldGAsXG4gICAgICB2YWx1ZTogcHJvcHMuczNCdWNrZXRzLmRlc3RpbmF0aW9uLmJ1Y2tldE5hbWUsXG4gICAgICBleHBvcnROYW1lOiBgJHtwcm9wcy5zdGFja05hbWV9LURlc3RpbmF0aW9uQnVja2V0YCxcbiAgICB9KTtcblxuICAgIHRoaXMuZHluYW1vRGJUYWJsZSA9IG5ldyBjZGsuQ2ZuT3V0cHV0KHRoaXMsICdEeW5hbW9EYlRhYmxlT3V0cHV0Jywge1xuICAgICAgZGVzY3JpcHRpb246IGAke3Byb3BzLnN0YWNrTmFtZX0gRHluYW1vREIgVGFibGVgLFxuICAgICAgdmFsdWU6IHByb3BzLmR5bmFtb0RiVGFibGVzLnZpZGVvSW5mby50YWJsZU5hbWUgPz8gJycsXG4gICAgICBleHBvcnROYW1lOiBgJHtwcm9wcy5zdGFja05hbWV9LUR5bmFtb0RiVGFibGVgLFxuICAgIH0pO1xuXG4gICAgdGhpcy5zb3VyY2VCdWNrZXQgPSBuZXcgY2RrLkNmbk91dHB1dCh0aGlzLCAnU291cmNlQnVja2V0T3V0cHV0Jywge1xuICAgICAgZGVzY3JpcHRpb246IGAke3Byb3BzLnN0YWNrTmFtZX0gU291cmNlIFMzIEJ1Y2tldGAsXG4gICAgICB2YWx1ZTogcHJvcHMuczNCdWNrZXRzLnNvdXJjZS5idWNrZXROYW1lLFxuICAgICAgZXhwb3J0TmFtZTogYCR7cHJvcHMuc3RhY2tOYW1lfS1Tb3VyY2VCdWNrZXRgLFxuICAgIH0pO1xuXG4gICAgdGhpcy5zbnNUb3BpYyA9IG5ldyBjZGsuQ2ZuT3V0cHV0KHRoaXMsICdTbnNUb3BpY091dHB1dCcsIHtcbiAgICAgIGRlc2NyaXB0aW9uOiBgJHtwcm9wcy5zdGFja05hbWV9IFNOUyBOb3RpZmljYXRpb24gVG9waWNgLFxuICAgICAgdmFsdWU6IHByb3BzLnNuc1RvcGljcy5ub3RpZmljYXRpb25zLnRvcGljQXJuLFxuICAgICAgZXhwb3J0TmFtZTogYCR7cHJvcHMuc3RhY2tOYW1lfS1TbnNUb3BpY2AsXG4gICAgfSk7XG5cbiAgICB0aGlzLnNxc0FybiA9IG5ldyBjZGsuQ2ZuT3V0cHV0KHRoaXMsICdTcXNRdWV1ZUFybk91dHB1dCcsIHtcbiAgICAgIGRlc2NyaXB0aW9uOiBgJHtwcm9wcy5zdGFja05hbWV9IFNRUyBRdWV1ZSBBUk5gLFxuICAgICAgdmFsdWU6IHByb3BzLnNxc1F1ZXVlcy5tYWluLnF1ZXVlQXJuLFxuICAgICAgZXhwb3J0TmFtZTogYCR7cHJvcHMuc3RhY2tOYW1lfS1TcXNRdWV1ZUFybmAsXG4gICAgfSk7XG5cbiAgICB0aGlzLnNxc1VybCA9IG5ldyBjZGsuQ2ZuT3V0cHV0KHRoaXMsICdTcXNRdWV1ZVVybE91dHB1dCcsIHtcbiAgICAgIGRlc2NyaXB0aW9uOiBgJHtwcm9wcy5zdGFja05hbWV9IFNRUyBRdWV1ZSBVUkxgLFxuICAgICAgdmFsdWU6IHByb3BzLnNxc1F1ZXVlcy5tYWluLnF1ZXVlVXJsLFxuICAgICAgZXhwb3J0TmFtZTogYCR7cHJvcHMuc3RhY2tOYW1lfS1TcXNRdWV1ZVVybGAsXG4gICAgfSk7XG4gIH1cbn0iXX0=